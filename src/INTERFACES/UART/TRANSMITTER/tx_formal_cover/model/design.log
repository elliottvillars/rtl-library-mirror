
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3627 (git sha1 06347b119b, g++ 9.3.0 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: ./uart_transmitter.v
Parsing formal SystemVerilog input from `./uart_transmitter.v' to AST representation.
Storing AST representation for module `$abstract\uart_transmitter'.
Successfully finished Verilog frontend.

2. Executing PREP pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_transmitter'.
Generating RTLIL representation for module `\uart_transmitter'.

2.2.1. Analyzing design hierarchy..
Top module:  \uart_transmitter

2.2.2. Analyzing design hierarchy..
Top module:  \uart_transmitter
Removing unused module `$abstract\uart_transmitter'.
Removed 1 unused modules.
Module uart_transmitter directly or indirectly contains formal properties -> setting "keep" attribute.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 5 switch rules as full_case in process $proc$./uart_transmitter.v:106$52 in module uart_transmitter.
Marked 2 switch rules as full_case in process $proc$./uart_transmitter.v:88$48 in module uart_transmitter.
Removed 1 dead cases from process $proc$./uart_transmitter.v:65$45 in module uart_transmitter.
Marked 1 switch rules as full_case in process $proc$./uart_transmitter.v:65$45 in module uart_transmitter.
Marked 2 switch rules as full_case in process $proc$./uart_transmitter.v:52$44 in module uart_transmitter.
Removed 1 dead cases from process $proc$./uart_transmitter.v:33$40 in module uart_transmitter.
Marked 1 switch rules as full_case in process $proc$./uart_transmitter.v:33$40 in module uart_transmitter.
Removed a total of 2 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 3 redundant assignments.
Promoted 51 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$234'.
  Set init value: $formal$./uart_transmitter.v:162$39_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$232'.
  Set init value: $formal$./uart_transmitter.v:161$38_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$230'.
  Set init value: $formal$./uart_transmitter.v:160$37_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$228'.
  Set init value: $formal$./uart_transmitter.v:154$36_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$226'.
  Set init value: $formal$./uart_transmitter.v:151$35_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$224'.
  Set init value: $formal$./uart_transmitter.v:150$34_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$222'.
  Set init value: $formal$./uart_transmitter.v:144$33_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$220'.
  Set init value: $formal$./uart_transmitter.v:142$32_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$218'.
  Set init value: $formal$./uart_transmitter.v:140$31_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$216'.
  Set init value: $formal$./uart_transmitter.v:138$30_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$214'.
  Set init value: $formal$./uart_transmitter.v:135$29_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$212'.
  Set init value: $formal$./uart_transmitter.v:133$28_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$210'.
  Set init value: $formal$./uart_transmitter.v:131$27_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$208'.
  Set init value: $formal$./uart_transmitter.v:129$26_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$206'.
  Set init value: $formal$./uart_transmitter.v:127$25_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$204'.
  Set init value: $formal$./uart_transmitter.v:125$24_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$202'.
  Set init value: $formal$./uart_transmitter.v:122$23_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$200'.
  Set init value: $formal$./uart_transmitter.v:117$22_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$198'.
  Set init value: $formal$./uart_transmitter.v:116$21_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$196'.
  Set init value: $formal$./uart_transmitter.v:115$20_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$194'.
  Set init value: $formal$./uart_transmitter.v:114$19_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$192'.
  Set init value: $formal$./uart_transmitter.v:113$18_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$190'.
  Set init value: $formal$./uart_transmitter.v:108$17_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:103$188'.
  Set init value: \f_PAST_VALID = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:0$187'.
  Set init value: \r_CURRENT_STATE = 2'00
  Set init value: \r_NEXT_STATE = 2'00
  Set init value: \r_BIT_COUNT = 3'000
  Set init value: \r_DATA_REG = 8'00000000

2.3.5. Executing PROC_ARST pass (detect async resets in processes).

2.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$234'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$232'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$230'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$228'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$226'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$224'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$222'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$220'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$218'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$216'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$214'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$212'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$210'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$208'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$206'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$204'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$202'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$200'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$198'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$196'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$194'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$192'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$190'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:104$189'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:103$188'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:0$187'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
     1/44: $0$formal$./uart_transmitter.v:113$18_EN[0:0]$72
     2/44: $0$formal$./uart_transmitter.v:113$18_CHECK[0:0]$71
     3/44: $0$formal$./uart_transmitter.v:114$19_EN[0:0]$74
     4/44: $0$formal$./uart_transmitter.v:114$19_CHECK[0:0]$73
     5/44: $0$formal$./uart_transmitter.v:115$20_EN[0:0]$76
     6/44: $0$formal$./uart_transmitter.v:115$20_CHECK[0:0]$75
     7/44: $0$formal$./uart_transmitter.v:116$21_EN[0:0]$78
     8/44: $0$formal$./uart_transmitter.v:116$21_CHECK[0:0]$77
     9/44: $0$formal$./uart_transmitter.v:117$22_EN[0:0]$80
    10/44: $0$formal$./uart_transmitter.v:117$22_CHECK[0:0]$79
    11/44: $0$formal$./uart_transmitter.v:122$23_EN[0:0]$82
    12/44: $0$formal$./uart_transmitter.v:122$23_CHECK[0:0]$81
    13/44: $0$formal$./uart_transmitter.v:125$24_EN[0:0]$84
    14/44: $0$formal$./uart_transmitter.v:125$24_CHECK[0:0]$83
    15/44: $0$formal$./uart_transmitter.v:127$25_EN[0:0]$86
    16/44: $0$formal$./uart_transmitter.v:127$25_CHECK[0:0]$85
    17/44: $0$formal$./uart_transmitter.v:129$26_EN[0:0]$88
    18/44: $0$formal$./uart_transmitter.v:129$26_CHECK[0:0]$87
    19/44: $0$formal$./uart_transmitter.v:131$27_EN[0:0]$90
    20/44: $0$formal$./uart_transmitter.v:131$27_CHECK[0:0]$89
    21/44: $0$formal$./uart_transmitter.v:133$28_EN[0:0]$92
    22/44: $0$formal$./uart_transmitter.v:133$28_CHECK[0:0]$91
    23/44: $0$formal$./uart_transmitter.v:135$29_EN[0:0]$94
    24/44: $0$formal$./uart_transmitter.v:135$29_CHECK[0:0]$93
    25/44: $0$formal$./uart_transmitter.v:138$30_EN[0:0]$96
    26/44: $0$formal$./uart_transmitter.v:138$30_CHECK[0:0]$95
    27/44: $0$formal$./uart_transmitter.v:140$31_EN[0:0]$98
    28/44: $0$formal$./uart_transmitter.v:140$31_CHECK[0:0]$97
    29/44: $0$formal$./uart_transmitter.v:142$32_EN[0:0]$100
    30/44: $0$formal$./uart_transmitter.v:142$32_CHECK[0:0]$99
    31/44: $0$formal$./uart_transmitter.v:144$33_EN[0:0]$102
    32/44: $0$formal$./uart_transmitter.v:144$33_CHECK[0:0]$101
    33/44: $0$formal$./uart_transmitter.v:150$34_EN[0:0]$104
    34/44: $0$formal$./uart_transmitter.v:150$34_CHECK[0:0]$103
    35/44: $0$formal$./uart_transmitter.v:151$35_EN[0:0]$106
    36/44: $0$formal$./uart_transmitter.v:151$35_CHECK[0:0]$105
    37/44: $0$formal$./uart_transmitter.v:154$36_EN[0:0]$108
    38/44: $0$formal$./uart_transmitter.v:154$36_CHECK[0:0]$107
    39/44: $0$formal$./uart_transmitter.v:160$37_EN[0:0]$110
    40/44: $0$formal$./uart_transmitter.v:160$37_CHECK[0:0]$109
    41/44: $0$formal$./uart_transmitter.v:161$38_EN[0:0]$112
    42/44: $0$formal$./uart_transmitter.v:161$38_CHECK[0:0]$111
    43/44: $0$formal$./uart_transmitter.v:162$39_EN[0:0]$114
    44/44: $0$formal$./uart_transmitter.v:162$39_CHECK[0:0]$113
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:88$48'.
     1/2: $0\r_BIT_COUNT[2:0]
     2/2: $0\r_DATA_REG[7:0]
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:65$45'.
     1/1: $1\o_TX[0:0]
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:52$44'.
     1/1: $0\r_CURRENT_STATE[1:0]
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:33$40'.
     1/1: $1\r_NEXT_STATE[1:0]

2.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\uart_transmitter.\f_TX_DATA' from process `\uart_transmitter.$proc$./uart_transmitter.v:104$189'.
No latch inferred for signal `\uart_transmitter.\o_TX_BUSY' from process `\uart_transmitter.$proc$./uart_transmitter.v:65$45'.
No latch inferred for signal `\uart_transmitter.\o_TX' from process `\uart_transmitter.$proc$./uart_transmitter.v:65$45'.
No latch inferred for signal `\uart_transmitter.\r_NEXT_STATE' from process `\uart_transmitter.$proc$./uart_transmitter.v:33$40'.
Removing init bit 1'0 for non-memory siginal `\uart_transmitter.\r_NEXT_STATE [0]` in process `\uart_transmitter.$proc$./uart_transmitter.v:33$40`.
Removing init bit 1'0 for non-memory siginal `\uart_transmitter.\r_NEXT_STATE [1]` in process `\uart_transmitter.$proc$./uart_transmitter.v:33$40`.

2.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\uart_transmitter.\f_PAST_VALID' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$610' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:109$1$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$611' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:110$2$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$612' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:112$3$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$613' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:118$4$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$614' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:122$5$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$615' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:123$6$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$616' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:138$7$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$617' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:140$8$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$618' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:149$9$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$619' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:151$10$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$620' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:152$11$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$621' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:155$12$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$622' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:159$13$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$623' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:161$14$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$624' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:162$15$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$625' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:163$16$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$626' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:108$17_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$627' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:108$17_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$628' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:113$18_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$629' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:113$18_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$630' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:114$19_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$631' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:114$19_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$632' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:115$20_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$633' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:115$20_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$634' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:116$21_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$635' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:116$21_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$636' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:117$22_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$637' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:117$22_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$638' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:122$23_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$639' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:122$23_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$640' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:125$24_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$641' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:125$24_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$642' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:127$25_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$643' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:127$25_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$644' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:129$26_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$645' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:129$26_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$646' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:131$27_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$647' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:131$27_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$648' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:133$28_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$649' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:133$28_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$650' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:135$29_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$651' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:135$29_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$652' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:138$30_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$653' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:138$30_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$654' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:140$31_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$655' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:140$31_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$656' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:142$32_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$657' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:142$32_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$658' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:144$33_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$659' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:144$33_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$660' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:150$34_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$661' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:150$34_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$662' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:151$35_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$663' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:151$35_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$664' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:154$36_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$665' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:154$36_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$666' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:160$37_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$667' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:160$37_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$668' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:161$38_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$669' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:161$38_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$670' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:162$39_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$671' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:162$39_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
  created $dff cell `$procdff$672' with positive edge clock.
Creating register for signal `\uart_transmitter.\r_BIT_COUNT' using process `\uart_transmitter.$proc$./uart_transmitter.v:88$48'.
  created $dff cell `$procdff$673' with positive edge clock.
Creating register for signal `\uart_transmitter.\r_DATA_REG' using process `\uart_transmitter.$proc$./uart_transmitter.v:88$48'.
  created $dff cell `$procdff$674' with positive edge clock.
Creating register for signal `\uart_transmitter.\r_CURRENT_STATE' using process `\uart_transmitter.$proc$./uart_transmitter.v:52$44'.
  created $dff cell `$procdff$675' with positive edge clock.

2.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$234'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$232'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$230'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$228'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$226'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$224'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$222'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$220'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$218'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$216'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$214'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$212'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$210'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$208'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$206'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$204'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$202'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$200'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$198'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$196'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$194'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$192'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$190'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:104$189'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:103$188'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:0$187'.
Found and cleaned up 14 empty switches in `\uart_transmitter.$proc$./uart_transmitter.v:106$52'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:106$52'.
Found and cleaned up 2 empty switches in `\uart_transmitter.$proc$./uart_transmitter.v:88$48'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:88$48'.
Found and cleaned up 1 empty switch in `\uart_transmitter.$proc$./uart_transmitter.v:65$45'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:65$45'.
Found and cleaned up 2 empty switches in `\uart_transmitter.$proc$./uart_transmitter.v:52$44'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:52$44'.
Found and cleaned up 1 empty switch in `\uart_transmitter.$proc$./uart_transmitter.v:33$40'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:33$40'.
Cleaned up 20 empty switches.

2.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_transmitter.
<suppressed ~13 debug messages>

2.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..
Removed 0 unused cells and 255 unused wires.
<suppressed ~1 debug messages>

2.6. Executing CHECK pass (checking for obvious problems).
checking module uart_transmitter..
found and reported 0 problems.

2.7. Executing OPT pass (performing simple optimizations).

2.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_transmitter.

2.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart_transmitter'.
<suppressed ~99 debug messages>
Removed a total of 33 cells.

2.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart_transmitter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

2.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart_transmitter.
    New ctrl vector for $pmux cell $procmux$594: { $eq$./uart_transmitter.v:127$131_Y $eq$./uart_transmitter.v:129$133_Y $auto$opt_reduce.cc:134:opt_mux$677 }
  Optimizing cells in module \uart_transmitter.
Performed a total of 1 changes.

2.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart_transmitter'.
<suppressed ~66 debug messages>
Removed a total of 22 cells.

2.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..
Removed 0 unused cells and 55 unused wires.
<suppressed ~1 debug messages>

2.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_transmitter.

2.7.8. Rerunning OPT passes. (Maybe there is more to do..)

2.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart_transmitter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~43 debug messages>

2.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart_transmitter.
Performed a total of 0 changes.

2.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart_transmitter'.
Removed a total of 0 cells.

2.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..

2.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_transmitter.

2.7.14. Finished OPT passes. (There is nothing left to do.)

2.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 2) from mux cell uart_transmitter.$ternary$./uart_transmitter.v:38$41 ($mux).
Removed top 1 bits (of 2) from mux cell uart_transmitter.$ternary$./uart_transmitter.v:44$43 ($mux).
Removed top 31 bits (of 32) from port B of cell uart_transmitter.$and$./uart_transmitter.v:0$116 ($and).
Removed top 31 bits (of 32) from port Y of cell uart_transmitter.$and$./uart_transmitter.v:0$116 ($and).
Removed top 31 bits (of 32) from port B of cell uart_transmitter.$and$./uart_transmitter.v:0$118 ($and).
Removed top 31 bits (of 32) from port Y of cell uart_transmitter.$and$./uart_transmitter.v:0$118 ($and).
Removed top 1 bits (of 2) from port B of cell uart_transmitter.$eq$./uart_transmitter.v:127$131 ($eq).
Removed top 1 bits (of 2) from port B of cell uart_transmitter.$eq$./uart_transmitter.v:138$138 ($eq).
Removed top 31 bits (of 32) from port B of cell uart_transmitter.$add$./uart_transmitter.v:152$150 ($add).
Removed top 28 bits (of 32) from port Y of cell uart_transmitter.$add$./uart_transmitter.v:152$150 ($add).
Removed top 28 bits (of 32) from port B of cell uart_transmitter.$eq$./uart_transmitter.v:152$151 ($eq).
Removed top 28 bits (of 32) from wire uart_transmitter.$add$./uart_transmitter.v:152$150_Y.
Removed top 31 bits (of 32) from wire uart_transmitter.$and$./uart_transmitter.v:0$116_Y.
Removed top 31 bits (of 32) from wire uart_transmitter.$and$./uart_transmitter.v:0$118_Y.
Removed top 1 bits (of 2) from wire uart_transmitter.$ternary$./uart_transmitter.v:38$41_Y.
Removed top 1 bits (of 2) from wire uart_transmitter.$ternary$./uart_transmitter.v:44$43_Y.

2.9. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

2.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

2.11. Executing MEMORY_COLLECT pass (generating $mem cells).

2.12. Executing OPT pass (performing simple optimizations).

2.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_transmitter.
<suppressed ~2 debug messages>

2.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart_transmitter'.
Removed a total of 0 cells.

2.12.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

2.12.4. Finished fast OPT passes.

2.13. Printing statistics.

=== uart_transmitter ===

   Number of wires:                231
   Number of wire bits:            284
   Number of public wires:          13
   Number of public wire bits:      38
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                248
     $add                            2
     $assert                        18
     $assume                         4
     $cover                          1
     $dff                           49
     $eq                            15
     $logic_and                      6
     $logic_not                      7
     $mux                          137
     $ne                             2
     $not                            1
     $pmux                           2
     $reduce_bool                    1
     $reduce_or                      2
     $shiftx                         1

2.14. Executing CHECK pass (checking for obvious problems).
checking module uart_transmitter..
found and reported 0 problems.

3. Executing MEMORY_NORDFF pass (extracting $dff cells from $mem).

4. Executing ASYNC2SYNC pass.

5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..
Removed 5 unused cells and 4 unused wires.
<suppressed ~6 debug messages>

6. Executing SETUNDEF pass (replace undef values with defined constants).

7. Executing OPT pass (performing simple optimizations).

7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_transmitter.

7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart_transmitter'.
Removed a total of 0 cells.

7.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$675 ($dff) from module uart_transmitter (D = $procmux$600_Y, Q = \r_CURRENT_STATE, rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$833 ($sdff) from module uart_transmitter (D = \r_NEXT_STATE, Q = \r_CURRENT_STATE).
Adding EN signal on $procdff$674 ($dff) from module uart_transmitter (D = \i_DATA_IN, Q = \r_DATA_REG).
Adding SRST signal on $procdff$673 ($dff) from module uart_transmitter (D = $add$./uart_transmitter.v:96$51_Y, Q = \r_BIT_COUNT, rval = 3'000).
Adding SRST signal on $procdff$666 ($dff) from module uart_transmitter (D = $procmux$558_Y, Q = $formal$./uart_transmitter.v:154$36_EN, rval = 1'0).
Adding SRST signal on $procdff$662 ($dff) from module uart_transmitter (D = $procmux$522_Y, Q = $formal$./uart_transmitter.v:150$34_EN, rval = 1'0).
Adding SRST signal on $procdff$660 ($dff) from module uart_transmitter (D = $procmux$321_Y, Q = $formal$./uart_transmitter.v:144$33_EN, rval = 1'0).
Adding SRST signal on $procdff$658 ($dff) from module uart_transmitter (D = $procmux$486_Y, Q = $formal$./uart_transmitter.v:142$32_EN, rval = 1'0).
Adding SRST signal on $procdff$656 ($dff) from module uart_transmitter (D = $procmux$468_Y, Q = $formal$./uart_transmitter.v:140$31_EN, rval = 1'0).
Adding SRST signal on $procdff$654 ($dff) from module uart_transmitter (D = $procmux$450_Y, Q = $formal$./uart_transmitter.v:138$30_EN, rval = 1'0).
Adding SRST signal on $procdff$652 ($dff) from module uart_transmitter (D = $procmux$431_Y, Q = $formal$./uart_transmitter.v:135$29_EN, rval = 1'0).
Adding SRST signal on $procdff$650 ($dff) from module uart_transmitter (D = $procmux$411_Y, Q = $formal$./uart_transmitter.v:133$28_EN, rval = 1'0).
Adding SRST signal on $procdff$648 ($dff) from module uart_transmitter (D = $procmux$379_Y, Q = $formal$./uart_transmitter.v:131$27_EN, rval = 1'0).
Adding SRST signal on $procdff$646 ($dff) from module uart_transmitter (D = $procmux$347_Y, Q = $formal$./uart_transmitter.v:129$26_EN, rval = 1'0).
Adding SRST signal on $procdff$644 ($dff) from module uart_transmitter (D = $procmux$321_Y, Q = $formal$./uart_transmitter.v:127$25_EN, rval = 1'0).
Adding SRST signal on $procdff$642 ($dff) from module uart_transmitter (D = $procmux$301_Y, Q = $formal$./uart_transmitter.v:125$24_EN, rval = 1'0).
Adding SRST signal on $procdff$640 ($dff) from module uart_transmitter (D = $procmux$286_Y, Q = $formal$./uart_transmitter.v:122$23_EN, rval = 1'0).
Adding SRST signal on $procdff$630 ($dff) from module uart_transmitter (D = $procmux$237_Y, Q = $formal$./uart_transmitter.v:113$18_EN, rval = 1'0).

7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..
Removed 48 unused cells and 48 unused wires.
<suppressed ~49 debug messages>

7.5. Rerunning OPT passes. (Removed registers in this run.)

7.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_transmitter.

7.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart_transmitter'.
<suppressed ~96 debug messages>
Removed a total of 32 cells.

7.8. Executing OPT_DFF pass (perform DFF optimizations).

7.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..
Removed 0 unused cells and 32 unused wires.
<suppressed ~1 debug messages>

7.10. Finished fast OPT passes.

8. Executing CHECK pass (checking for obvious problems).
checking module uart_transmitter..
found and reported 0 problems.

9. Executing HIERARCHY pass (managing design hierarchy).

9.1. Analyzing design hierarchy..
Top module:  \uart_transmitter

9.2. Analyzing design hierarchy..
Top module:  \uart_transmitter
Removed 0 unused modules.
Module uart_transmitter directly or indirectly contains formal properties -> setting "keep" attribute.

10. Executing RTLIL backend.
Output filename: ../model/design.il

End of script. Logfile hash: 338a77dd9c, CPU: user 0.13s system 0.01s, MEM: 14.77 MB peak
Yosys 0.9+3627 (git sha1 06347b119b, g++ 9.3.0 -fPIC -Os)
Time spent: 22% 8x opt_clean (0 sec), 20% 7x opt_expr (0 sec), ...
