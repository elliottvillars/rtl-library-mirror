
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+1706 (git sha1 2e8d6ec0b0, g++ 9.2.0 -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: ./uart_transmitter.v
Parsing formal SystemVerilog input from `./uart_transmitter.v' to AST representation.
Storing AST representation for module `$abstract\uart_transmitter'.
Successfully finished Verilog frontend.

2. Executing PREP pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart_transmitter'.
Generating RTLIL representation for module `\uart_transmitter'.

2.2.1. Analyzing design hierarchy..
Top module:  \uart_transmitter

2.2.2. Analyzing design hierarchy..
Top module:  \uart_transmitter
Removing unused module `$abstract\uart_transmitter'.
Removed 1 unused modules.
Module uart_transmitter directly or indirectly contains formal properties -> setting "keep" attribute.

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$./uart_transmitter.v:100$43 in module uart_transmitter.
Marked 2 switch rules as full_case in process $proc$./uart_transmitter.v:66$39 in module uart_transmitter.
Marked 1 switch rules as full_case in process $proc$./uart_transmitter.v:58$34 in module uart_transmitter.
Marked 1 switch rules as full_case in process $proc$./uart_transmitter.v:50$32 in module uart_transmitter.
Removed 1 dead cases from process $proc$./uart_transmitter.v:25$29 in module uart_transmitter.
Marked 3 switch rules as full_case in process $proc$./uart_transmitter.v:25$29 in module uart_transmitter.
Removed a total of 1 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 2 redundant assignments.
Promoted 39 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:143$189'.
  Set init value: $formal$./uart_transmitter.v:143$28_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:141$187'.
  Set init value: $formal$./uart_transmitter.v:141$27_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:139$185'.
  Set init value: $formal$./uart_transmitter.v:139$26_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:137$183'.
  Set init value: $formal$./uart_transmitter.v:137$25_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:135$181'.
  Set init value: $formal$./uart_transmitter.v:135$24_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:133$179'.
  Set init value: $formal$./uart_transmitter.v:133$23_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:128$177'.
  Set init value: $formal$./uart_transmitter.v:128$22_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:127$175'.
  Set init value: $formal$./uart_transmitter.v:127$21_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:123$173'.
  Set init value: $formal$./uart_transmitter.v:123$20_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:122$171'.
  Set init value: $formal$./uart_transmitter.v:122$19_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:120$169'.
  Set init value: $formal$./uart_transmitter.v:120$18_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:115$167'.
  Set init value: $formal$./uart_transmitter.v:115$17_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:114$165'.
  Set init value: $formal$./uart_transmitter.v:114$16_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:110$163'.
  Set init value: $formal$./uart_transmitter.v:110$15_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:109$161'.
  Set init value: $formal$./uart_transmitter.v:109$14_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:106$159'.
  Set init value: $formal$./uart_transmitter.v:106$13_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:103$157'.
  Set init value: $formal$./uart_transmitter.v:103$12_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:102$155'.
  Set init value: $formal$./uart_transmitter.v:102$11_EN = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:99$154'.
  Set init value: \r_PAST_VALID = 1'0
Found init rule in `\uart_transmitter.$proc$./uart_transmitter.v:19$153'.
  Set init value: \r_CURRENT_STATE = 2'00
  Set init value: \r_NEXT_STATE = 2'00
  Set init value: \r_BIT_COUNT = 4'0000
  Set init value: \r_DATA_REG = 8'00000000

2.3.5. Executing PROC_ARST pass (detect async resets in processes).

2.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:143$189'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:141$187'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:139$185'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:137$183'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:135$181'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:133$179'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:128$177'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:127$175'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:123$173'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:122$171'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:120$169'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:115$167'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:114$165'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:110$163'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:109$161'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:106$159'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:103$157'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:102$155'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:99$154'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:19$153'.
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
     1/32: $0$formal$./uart_transmitter.v:106$13_EN[0:0]$59
     2/32: $0$formal$./uart_transmitter.v:106$13_CHECK[0:0]$58
     3/32: $0$formal$./uart_transmitter.v:109$14_EN[0:0]$61
     4/32: $0$formal$./uart_transmitter.v:109$14_CHECK[0:0]$60
     5/32: $0$formal$./uart_transmitter.v:110$15_EN[0:0]$63
     6/32: $0$formal$./uart_transmitter.v:110$15_CHECK[0:0]$62
     7/32: $0$formal$./uart_transmitter.v:114$16_EN[0:0]$65
     8/32: $0$formal$./uart_transmitter.v:114$16_CHECK[0:0]$64
     9/32: $0$formal$./uart_transmitter.v:115$17_EN[0:0]$67
    10/32: $0$formal$./uart_transmitter.v:115$17_CHECK[0:0]$66
    11/32: $0$formal$./uart_transmitter.v:120$18_EN[0:0]$69
    12/32: $0$formal$./uart_transmitter.v:120$18_CHECK[0:0]$68
    13/32: $0$formal$./uart_transmitter.v:122$19_EN[0:0]$71
    14/32: $0$formal$./uart_transmitter.v:122$19_CHECK[0:0]$70
    15/32: $0$formal$./uart_transmitter.v:123$20_EN[0:0]$73
    16/32: $0$formal$./uart_transmitter.v:123$20_CHECK[0:0]$72
    17/32: $0$formal$./uart_transmitter.v:127$21_EN[0:0]$75
    18/32: $0$formal$./uart_transmitter.v:127$21_CHECK[0:0]$74
    19/32: $0$formal$./uart_transmitter.v:128$22_EN[0:0]$77
    20/32: $0$formal$./uart_transmitter.v:128$22_CHECK[0:0]$76
    21/32: $0$formal$./uart_transmitter.v:133$23_EN[0:0]$79
    22/32: $0$formal$./uart_transmitter.v:133$23_CHECK[0:0]$78
    23/32: $0$formal$./uart_transmitter.v:135$24_EN[0:0]$81
    24/32: $0$formal$./uart_transmitter.v:135$24_CHECK[0:0]$80
    25/32: $0$formal$./uart_transmitter.v:137$25_EN[0:0]$83
    26/32: $0$formal$./uart_transmitter.v:137$25_CHECK[0:0]$82
    27/32: $0$formal$./uart_transmitter.v:139$26_EN[0:0]$85
    28/32: $0$formal$./uart_transmitter.v:139$26_CHECK[0:0]$84
    29/32: $0$formal$./uart_transmitter.v:141$27_EN[0:0]$87
    30/32: $0$formal$./uart_transmitter.v:141$27_CHECK[0:0]$86
    31/32: $0$formal$./uart_transmitter.v:143$28_EN[0:0]$89
    32/32: $0$formal$./uart_transmitter.v:143$28_CHECK[0:0]$88
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:66$39'.
     1/2: $0\r_DATA_REG[7:0]
     2/2: $0\o_TX[0:0]
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:58$34'.
     1/1: $0\r_BIT_COUNT[3:0]
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:50$32'.
     1/1: $0\r_CURRENT_STATE[1:0]
Creating decoders for process `\uart_transmitter.$proc$./uart_transmitter.v:25$29'.
     1/3: $3\r_NEXT_STATE[1:0]
     2/3: $2\r_NEXT_STATE[1:0]
     3/3: $1\r_NEXT_STATE[1:0]

2.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\uart_transmitter.\r_NEXT_STATE' from process `\uart_transmitter.$proc$./uart_transmitter.v:25$29'.

2.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\uart_transmitter.\r_PAST_VALID' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$369' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:103$1$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$370' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:105$2$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$371' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:106$3$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$372' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:107$4$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$373' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:112$5$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$374' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:117$6$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$375' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:120$7$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$376' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:123$8$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$377' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:125$9$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$378' with positive edge clock.
Creating register for signal `\uart_transmitter.$past$./uart_transmitter.v:128$10$0' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$379' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:102$11_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$380' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:102$11_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$381' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:103$12_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$382' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:103$12_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$383' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:106$13_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$384' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:106$13_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$385' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:109$14_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$386' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:109$14_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$387' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:110$15_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$388' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:110$15_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$389' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:114$16_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$390' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:114$16_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$391' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:115$17_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$392' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:115$17_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$393' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:120$18_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$394' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:120$18_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$395' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:122$19_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$396' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:122$19_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$397' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:123$20_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$398' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:123$20_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$399' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:127$21_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$400' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:127$21_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$401' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:128$22_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$402' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:128$22_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$403' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:133$23_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$404' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:133$23_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$405' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:135$24_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$406' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:135$24_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$407' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:137$25_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$408' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:137$25_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$409' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:139$26_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$410' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:139$26_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$411' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:141$27_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$412' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:141$27_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$413' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:143$28_CHECK' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$414' with positive edge clock.
Creating register for signal `\uart_transmitter.$formal$./uart_transmitter.v:143$28_EN' using process `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
  created $dff cell `$procdff$415' with positive edge clock.
Creating register for signal `\uart_transmitter.\o_TX' using process `\uart_transmitter.$proc$./uart_transmitter.v:66$39'.
  created $dff cell `$procdff$416' with positive edge clock.
Creating register for signal `\uart_transmitter.\r_DATA_REG' using process `\uart_transmitter.$proc$./uart_transmitter.v:66$39'.
  created $dff cell `$procdff$417' with positive edge clock.
Creating register for signal `\uart_transmitter.\r_BIT_COUNT' using process `\uart_transmitter.$proc$./uart_transmitter.v:58$34'.
  created $dff cell `$procdff$418' with positive edge clock.
Creating register for signal `\uart_transmitter.\r_CURRENT_STATE' using process `\uart_transmitter.$proc$./uart_transmitter.v:50$32'.
  created $dff cell `$procdff$419' with positive edge clock.

2.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:143$189'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:141$187'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:139$185'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:137$183'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:135$181'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:133$179'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:128$177'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:127$175'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:123$173'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:122$171'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:120$169'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:115$167'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:114$165'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:110$163'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:109$161'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:106$159'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:103$157'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:102$155'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:99$154'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:19$153'.
Found and cleaned up 12 empty switches in `\uart_transmitter.$proc$./uart_transmitter.v:100$43'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:100$43'.
Found and cleaned up 3 empty switches in `\uart_transmitter.$proc$./uart_transmitter.v:66$39'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:66$39'.
Found and cleaned up 1 empty switch in `\uart_transmitter.$proc$./uart_transmitter.v:58$34'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:58$34'.
Found and cleaned up 1 empty switch in `\uart_transmitter.$proc$./uart_transmitter.v:50$32'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:50$32'.
Found and cleaned up 3 empty switches in `\uart_transmitter.$proc$./uart_transmitter.v:25$29'.
Removing empty process `uart_transmitter.$proc$./uart_transmitter.v:25$29'.
Cleaned up 20 empty switches.

2.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_transmitter.
<suppressed ~24 debug messages>

2.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..
Removed 0 unused cells and 162 unused wires.
<suppressed ~1 debug messages>

2.6. Executing CHECK pass (checking for obvious problems).
checking module uart_transmitter..
found and reported 0 problems.

2.7. Executing OPT pass (performing simple optimizations).

2.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_transmitter.

2.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart_transmitter'.
<suppressed ~93 debug messages>
Removed a total of 31 cells.

2.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart_transmitter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$354.
    dead port 2/2 on $mux $procmux$362.
Removed 2 multiplexer ports.
<suppressed ~37 debug messages>

2.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart_transmitter.
    New ctrl vector for $pmux cell $procmux$327: { $eq$./uart_transmitter.v:106$97_Y $eq$./uart_transmitter.v:138$124_Y $auto$opt_reduce.cc:134:opt_mux$421 }
    New ctrl vector for $pmux cell $procmux$334: { $eq$./uart_transmitter.v:136$122_Y $eq$./uart_transmitter.v:138$124_Y $auto$opt_reduce.cc:134:opt_mux$423 }
  Optimizing cells in module \uart_transmitter.
Performed a total of 2 changes.

2.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart_transmitter'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

2.7.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..
Removed 0 unused cells and 42 unused wires.
<suppressed ~1 debug messages>

2.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_transmitter.

2.7.9. Rerunning OPT passes. (Maybe there is more to do..)

2.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \uart_transmitter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

2.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \uart_transmitter.
Performed a total of 0 changes.

2.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart_transmitter'.
Removed a total of 0 cells.

2.7.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..

2.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_transmitter.

2.7.16. Finished OPT passes. (There is nothing left to do.)

2.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell uart_transmitter.$and$./uart_transmitter.v:105$92 ($and).
Removed top 31 bits (of 32) from port Y of cell uart_transmitter.$and$./uart_transmitter.v:105$92 ($and).
Removed top 31 bits (of 32) from port B of cell uart_transmitter.$and$./uart_transmitter.v:105$94 ($and).
Removed top 31 bits (of 32) from port Y of cell uart_transmitter.$and$./uart_transmitter.v:105$94 ($and).
Removed top 1 bits (of 2) from port B of cell uart_transmitter.$eq$./uart_transmitter.v:112$102 ($eq).
Removed top 31 bits (of 32) from port B of cell uart_transmitter.$add$./uart_transmitter.v:123$109 ($add).
Removed top 27 bits (of 32) from port Y of cell uart_transmitter.$add$./uart_transmitter.v:123$109 ($add).
Removed top 27 bits (of 32) from port B of cell uart_transmitter.$eq$./uart_transmitter.v:123$110 ($eq).
Removed top 1 bits (of 2) from port B of cell uart_transmitter.$eq$./uart_transmitter.v:133$117 ($eq).
Removed top 1 bits (of 2) from port B of cell uart_transmitter.$eq$./uart_transmitter.v:136$122 ($eq).
Removed top 1 bits (of 2) from mux cell uart_transmitter.$procmux$352 ($mux).
Removed top 1 bits (of 2) from mux cell uart_transmitter.$procmux$360 ($mux).
Removed top 1 bits (of 2) from wire uart_transmitter.$2\r_NEXT_STATE[1:0].
Removed top 27 bits (of 32) from wire uart_transmitter.$add$./uart_transmitter.v:123$109_Y.
Removed top 31 bits (of 32) from wire uart_transmitter.$and$./uart_transmitter.v:105$92_Y.
Removed top 31 bits (of 32) from wire uart_transmitter.$and$./uart_transmitter.v:105$94_Y.

2.9. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

2.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

2.11. Executing MEMORY_COLLECT pass (generating $mem cells).

2.12. Executing OPT pass (performing simple optimizations).

2.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_transmitter.
<suppressed ~2 debug messages>

2.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart_transmitter'.
Removed a total of 0 cells.

2.12.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

2.12.5. Finished fast OPT passes.

2.13. Printing statistics.

=== uart_transmitter ===

   Number of wires:                150
   Number of wire bits:            199
   Number of public wires:          10
   Number of public wire bits:      29
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                164
     $add                            2
     $assert                        15
     $assume                         2
     $cover                          1
     $dff                           41
     $eq                            13
     $logic_and                      8
     $logic_not                      5
     $mux                           67
     $ne                             3
     $not                            2
     $pmux                           3
     $reduce_or                      2

2.14. Executing CHECK pass (checking for obvious problems).
checking module uart_transmitter..
found and reported 0 problems.

3. Executing MEMORY_NORDFF pass (extracting $dff cells from $mem).

4. Executing ASYNC2SYNC pass.

5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..
Removed 8 unused cells and 7 unused wires.
<suppressed ~9 debug messages>

6. Executing SETUNDEF pass (replace undef values with defined constants).

7. Executing OPT pass (performing simple optimizations).

7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_transmitter.

7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart_transmitter'.
Removed a total of 0 cells.

7.3. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec $formal$./uart_transmitter.v:106$13_EN = 1'0 to constant driver in module uart_transmitter.
Promoted 1 init specs to constant drivers.

7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

7.5. Rerunning OPT passes. (Removed registers in this run.)

7.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module uart_transmitter.

7.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\uart_transmitter'.
Removed a total of 0 cells.

7.8. Executing OPT_RMDFF pass (remove dff with constant values).

7.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \uart_transmitter..

7.10. Finished fast OPT passes.

8. Executing CHECK pass (checking for obvious problems).
checking module uart_transmitter..
found and reported 0 problems.

9. Executing HIERARCHY pass (managing design hierarchy).

9.1. Analyzing design hierarchy..
Top module:  \uart_transmitter

9.2. Analyzing design hierarchy..
Top module:  \uart_transmitter
Removed 0 unused modules.
Module uart_transmitter directly or indirectly contains formal properties -> setting "keep" attribute.

10. Executing ILANG backend.
Output filename: ../model/design.il

End of script. Logfile hash: 3ed0419599, CPU: user 0.16s system 0.00s, MEM: 13.60 MB peak
Yosys 0.9+1706 (git sha1 2e8d6ec0b0, g++ 9.2.0 -fPIC -Os)
Time spent: 24% 8x opt_clean (0 sec), 21% 7x opt_expr (0 sec), ...
