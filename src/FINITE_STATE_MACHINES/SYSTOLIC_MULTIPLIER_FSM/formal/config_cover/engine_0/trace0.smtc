initial
assume (= [$and$systolic_multiplier_fsm.v:0$103_Y] #b1)
assume (= [$eq$systolic_multiplier_fsm.v:186$124_Y] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:167$23_CHECK] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:167$23_EN] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:169$24_CHECK] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:169$24_EN] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:171$25_CHECK] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:171$25_EN] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:173$26_CHECK] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:173$26_EN] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:175$27_CHECK] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:175$27_EN] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:177$28_CHECK] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:177$28_EN] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:179$29_CHECK] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:179$29_EN] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:182$30_CHECK] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:182$30_EN] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:184$31_CHECK] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:186$32_CHECK] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:186$32_EN] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:188$33_CHECK] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:188$33_EN] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:190$34_CHECK] #b0)
assume (= [$formal$systolic_multiplier_fsm.v:190$34_EN] #b0)
assume (= [$past$systolic_multiplier_fsm.v:168$3$0] #b00)
assume (= [$past$systolic_multiplier_fsm.v:174$6$0] #b0000)
assume (= [$past$systolic_multiplier_fsm.v:196$18$0] #b0)
assume (= [fr_PAST_VALID] #b0)
assume (= [o_RESULT_READY] #b0)
assume (= [o_SHIFT_REG_LOAD] #b0)
assume (= [r_CALC_COUNTER] #b1001)
assume (= [r_CURRENT_STATE] #b11)

state 0
assume (= [i_BEGIN_MULT] #b0)
assume (= [i_CLK] #b0)
assume (= [i_CLK_ENABLE] #b1)
assume (= [i_RESET] #b0)

state 1
assume (= [i_BEGIN_MULT] #b0)
assume (= [i_CLK] #b1)
assume (= [i_CLK_ENABLE] #b1)
assume (= [i_RESET] #b0)

state 2
assume (= [i_BEGIN_MULT] #b0)
assume (= [i_CLK] #b0)
assume (= [i_CLK_ENABLE] #b1)
assume (= [i_RESET] #b0)
