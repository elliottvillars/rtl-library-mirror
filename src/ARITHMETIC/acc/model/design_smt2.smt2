; SMT-LIBv2 description generated by Yosys 0.9 (git sha1 UNKNOWN, clang 9.0.0 -march=x86-64 -mtune=generic -O2 -fno-plt -fPIC -Os)
; yosys-smt2-module accumulator
(declare-sort |accumulator_s| 0)
(declare-fun |accumulator_is| (|accumulator_s|) Bool)
; yosys-smt2-register r_PAST_VALID 1
; yosys-smt2-wire r_PAST_VALID 1
(declare-fun |accumulator#0| (|accumulator_s|) (_ BitVec 1)) ; \r_PAST_VALID
(define-fun |accumulator_n r_PAST_VALID| ((state |accumulator_s|)) Bool (= ((_ extract 0 0) (|accumulator#0| state)) #b1))
; yosys-smt2-output o_ACCUMULATION 8
; yosys-smt2-register o_ACCUMULATION 8
; yosys-smt2-wire o_ACCUMULATION 8
(declare-fun |accumulator#1| (|accumulator_s|) (_ BitVec 8)) ; \o_ACCUMULATION
(define-fun |accumulator_n o_ACCUMULATION| ((state |accumulator_s|)) (_ BitVec 8) (|accumulator#1| state))
; yosys-smt2-input i_SUMMAND 8
; yosys-smt2-wire i_SUMMAND 8
(declare-fun |accumulator#2| (|accumulator_s|) (_ BitVec 8)) ; \i_SUMMAND
(define-fun |accumulator_n i_SUMMAND| ((state |accumulator_s|)) (_ BitVec 8) (|accumulator#2| state))
; yosys-smt2-input i_RST 1
; yosys-smt2-wire i_RST 1
(declare-fun |accumulator#3| (|accumulator_s|) Bool) ; \i_RST
(define-fun |accumulator_n i_RST| ((state |accumulator_s|)) Bool (|accumulator#3| state))
; yosys-smt2-input i_CLK_EN 1
; yosys-smt2-wire i_CLK_EN 1
(declare-fun |accumulator#4| (|accumulator_s|) Bool) ; \i_CLK_EN
(define-fun |accumulator_n i_CLK_EN| ((state |accumulator_s|)) Bool (|accumulator#4| state))
; yosys-smt2-input i_CLK 1
; yosys-smt2-wire i_CLK 1
(declare-fun |accumulator#5| (|accumulator_s|) Bool) ; \i_CLK
(define-fun |accumulator_n i_CLK| ((state |accumulator_s|)) Bool (|accumulator#5| state))
; yosys-smt2-register $past$accumulator.v:56$6$0 8
(declare-fun |accumulator#6| (|accumulator_s|) (_ BitVec 8)) ; $past$accumulator.v:56$6$0
(define-fun |accumulator_n $past$accumulator.v:56$6$0| ((state |accumulator_s|)) (_ BitVec 8) (|accumulator#6| state))
; yosys-smt2-register $past$accumulator.v:56$5$0 8
(declare-fun |accumulator#7| (|accumulator_s|) (_ BitVec 8)) ; $past$accumulator.v:56$5$0
(define-fun |accumulator_n $past$accumulator.v:56$5$0| ((state |accumulator_s|)) (_ BitVec 8) (|accumulator#7| state))
; yosys-smt2-register $formal$accumulator.v:59$14_EN 1
(declare-fun |accumulator#8| (|accumulator_s|) (_ BitVec 1)) ; $formal$accumulator.v:59$14_EN
(define-fun |accumulator_n $formal$accumulator.v:59$14_EN| ((state |accumulator_s|)) Bool (= ((_ extract 0 0) (|accumulator#8| state)) #b1))
; yosys-smt2-register $formal$accumulator.v:59$14_CHECK 1
(declare-fun |accumulator#9| (|accumulator_s|) (_ BitVec 1)) ; $formal$accumulator.v:59$14_CHECK
(define-fun |accumulator_n $formal$accumulator.v:59$14_CHECK| ((state |accumulator_s|)) Bool (= ((_ extract 0 0) (|accumulator#9| state)) #b1))
; yosys-smt2-register $formal$accumulator.v:57$13_EN 1
(declare-fun |accumulator#10| (|accumulator_s|) (_ BitVec 1)) ; $formal$accumulator.v:57$13_EN
(define-fun |accumulator_n $formal$accumulator.v:57$13_EN| ((state |accumulator_s|)) Bool (= ((_ extract 0 0) (|accumulator#10| state)) #b1))
; yosys-smt2-register $formal$accumulator.v:57$13_CHECK 1
(declare-fun |accumulator#11| (|accumulator_s|) (_ BitVec 1)) ; $formal$accumulator.v:57$13_CHECK
(define-fun |accumulator_n $formal$accumulator.v:57$13_CHECK| ((state |accumulator_s|)) Bool (= ((_ extract 0 0) (|accumulator#11| state)) #b1))
; yosys-smt2-register $formal$accumulator.v:53$12_EN 1
(declare-fun |accumulator#12| (|accumulator_s|) (_ BitVec 1)) ; $formal$accumulator.v:53$12_EN
(define-fun |accumulator_n $formal$accumulator.v:53$12_EN| ((state |accumulator_s|)) Bool (= ((_ extract 0 0) (|accumulator#12| state)) #b1))
; yosys-smt2-register $formal$accumulator.v:53$12_CHECK 1
(declare-fun |accumulator#13| (|accumulator_s|) (_ BitVec 1)) ; $formal$accumulator.v:53$12_CHECK
(define-fun |accumulator_n $formal$accumulator.v:53$12_CHECK| ((state |accumulator_s|)) Bool (= ((_ extract 0 0) (|accumulator#13| state)) #b1))
; yosys-smt2-register $eq$accumulator.v:56$47_Y 1
(declare-fun |accumulator#14| (|accumulator_s|) (_ BitVec 1)) ; $eq$accumulator.v:56$47_Y
(define-fun |accumulator_n $eq$accumulator.v:56$47_Y| ((state |accumulator_s|)) Bool (= ((_ extract 0 0) (|accumulator#14| state)) #b1))
; yosys-smt2-register $eq$accumulator.v:52$45_Y 1
(declare-fun |accumulator#15| (|accumulator_s|) (_ BitVec 1)) ; $eq$accumulator.v:52$45_Y
(define-fun |accumulator_n $eq$accumulator.v:52$45_Y| ((state |accumulator_s|)) Bool (= ((_ extract 0 0) (|accumulator#15| state)) #b1))
; yosys-smt2-register $and$accumulator.v:50$40_Y 1
(declare-fun |accumulator#16| (|accumulator_s|) (_ BitVec 1)) ; $and$accumulator.v:50$40_Y
(define-fun |accumulator_n $and$accumulator.v:50$40_Y| ((state |accumulator_s|)) Bool (= ((_ extract 0 0) (|accumulator#16| state)) #b1))
(define-fun |accumulator#17| ((state |accumulator_s|)) Bool (distinct (|accumulator#16| state) (ite (|accumulator#5| state) #b1 #b0))) ; $0$formal$accumulator.v:48$11_CHECK[0:0]$30
; yosys-smt2-assume 0 accumulator.v:48
(define-fun |accumulator_u 0| ((state |accumulator_s|)) Bool (or (|accumulator#17| state) (not true))) ; $assume$accumulator.v:48$55
; yosys-smt2-assert 0 accumulator.v:59
(define-fun |accumulator_a 0| ((state |accumulator_s|)) Bool (or (= ((_ extract 0 0) (|accumulator#9| state)) #b1) (not (= ((_ extract 0 0) (|accumulator#8| state)) #b1)))) ; $assert$accumulator.v:59$58
; yosys-smt2-assert 1 accumulator.v:57
(define-fun |accumulator_a 1| ((state |accumulator_s|)) Bool (or (= ((_ extract 0 0) (|accumulator#11| state)) #b1) (not (= ((_ extract 0 0) (|accumulator#10| state)) #b1)))) ; $assert$accumulator.v:57$57
; yosys-smt2-assert 2 accumulator.v:53
(define-fun |accumulator_a 2| ((state |accumulator_s|)) Bool (or (= ((_ extract 0 0) (|accumulator#13| state)) #b1) (not (= ((_ extract 0 0) (|accumulator#12| state)) #b1)))) ; $assert$accumulator.v:53$56
; yosys-smt2-anyseq accumulator#18 1 $auto$setundef.cc:524:execute$140
(declare-fun |accumulator#18| (|accumulator_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$141
; yosys-smt2-anyseq accumulator#19 1 $auto$setundef.cc:524:execute$138
(declare-fun |accumulator#19| (|accumulator_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$139
(define-fun |accumulator#20| ((state |accumulator_s|)) Bool (not (or  (= ((_ extract 0 0) (|accumulator#1| state)) #b1) (= ((_ extract 1 1) (|accumulator#1| state)) #b1) (= ((_ extract 2 2) (|accumulator#1| state)) #b1) (= ((_ extract 3 3) (|accumulator#1| state)) #b1) (= ((_ extract 4 4) (|accumulator#1| state)) #b1) (= ((_ extract 5 5) (|accumulator#1| state)) #b1) (= ((_ extract 6 6) (|accumulator#1| state)) #b1) (= ((_ extract 7 7) (|accumulator#1| state)) #b1)))) ; $eq$accumulator.v:53$46_Y
(define-fun |accumulator#21| ((state |accumulator_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|accumulator#15| state)) #b1) (ite (|accumulator#20| state) #b1 #b0) (|accumulator#19| state))) ; $procmux$74_Y
(define-fun |accumulator#22| ((state |accumulator_s|)) Bool (not (or  (= ((_ extract 0 0) (|accumulator#16| state)) #b1) false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false))) ; $logic_not$accumulator.v:50$41_Y
(define-fun |accumulator#23| ((state |accumulator_s|)) Bool (and (or  (|accumulator#22| state) false) (or  (|accumulator#5| state) false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false))) ; $logic_and$accumulator.v:50$43_Y
(define-fun |accumulator#24| ((state |accumulator_s|)) Bool (and (or  (= ((_ extract 0 0) (|accumulator#0| state)) #b1) false) (or  (|accumulator#23| state) false))) ; $logic_and$accumulator.v:50$44_Y
(define-fun |accumulator#25| ((state |accumulator_s|)) (_ BitVec 1) (ite (|accumulator#24| state) (|accumulator#21| state) (|accumulator#18| state))) ; $0$formal$accumulator.v:53$12_CHECK[0:0]$32
(define-fun |accumulator#26| ((state |accumulator_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|accumulator#15| state)) #b1) #b1 #b0)) ; $procmux$69_Y
(define-fun |accumulator#27| ((state |accumulator_s|)) (_ BitVec 1) (ite (|accumulator#24| state) (|accumulator#26| state) #b0)) ; $0$formal$accumulator.v:53$12_EN[0:0]$33
; yosys-smt2-anyseq accumulator#28 1 $auto$setundef.cc:524:execute$146
(declare-fun |accumulator#28| (|accumulator_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$147
; yosys-smt2-anyseq accumulator#29 1 $auto$setundef.cc:524:execute$142
(declare-fun |accumulator#29| (|accumulator_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$143
(define-fun |accumulator#30| ((state |accumulator_s|)) (_ BitVec 8) (bvadd (|accumulator#7| state) (|accumulator#6| state))) ; $add$accumulator.v:56$48_Y
(define-fun |accumulator#31| ((state |accumulator_s|)) Bool (= (|accumulator#1| state) (|accumulator#30| state))) ; $eq$accumulator.v:57$52_Y
(define-fun |accumulator#32| ((state |accumulator_s|)) Bool (bvuge (|accumulator#1| state) (|accumulator#30| state))) ; $ge$accumulator.v:56$49_Y
(define-fun |accumulator#33| ((state |accumulator_s|)) Bool (and (or  (= ((_ extract 0 0) (|accumulator#14| state)) #b1) false) (or  (|accumulator#32| state) false))) ; $logic_and$accumulator.v:56$50_Y
(define-fun |accumulator#34| ((state |accumulator_s|)) (_ BitVec 1) (ite (|accumulator#33| state) (ite (|accumulator#31| state) #b1 #b0) (|accumulator#29| state))) ; $procmux$85_Y
; yosys-smt2-anyseq accumulator#35 1 $auto$setundef.cc:524:execute$144
(declare-fun |accumulator#35| (|accumulator_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$145
(define-fun |accumulator#36| ((state |accumulator_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|accumulator#15| state)) #b1) (|accumulator#35| state) (|accumulator#34| state))) ; $procmux$88_Y
(define-fun |accumulator#37| ((state |accumulator_s|)) (_ BitVec 1) (ite (|accumulator#24| state) (|accumulator#36| state) (|accumulator#28| state))) ; $0$formal$accumulator.v:57$13_CHECK[0:0]$34
(define-fun |accumulator#38| ((state |accumulator_s|)) (_ BitVec 1) (ite (|accumulator#33| state) #b1 #b0)) ; $procmux$78_Y
(define-fun |accumulator#39| ((state |accumulator_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|accumulator#15| state)) #b1) #b0 (|accumulator#38| state))) ; $procmux$81_Y
(define-fun |accumulator#40| ((state |accumulator_s|)) (_ BitVec 1) (ite (|accumulator#24| state) (|accumulator#39| state) #b0)) ; $0$formal$accumulator.v:57$13_EN[0:0]$35
; yosys-smt2-anyseq accumulator#41 1 $auto$setundef.cc:524:execute$136
(declare-fun |accumulator#41| (|accumulator_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$137
(define-fun |accumulator#42| ((state |accumulator_s|)) Bool (= (|accumulator#1| state) (|accumulator#7| state))) ; $eq$accumulator.v:59$54_Y
; yosys-smt2-anyseq accumulator#43 1 $auto$setundef.cc:524:execute$148
(declare-fun |accumulator#43| (|accumulator_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$149
(define-fun |accumulator#44| ((state |accumulator_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|accumulator#14| state)) #b1) (|accumulator#43| state) (ite (|accumulator#42| state) #b1 #b0))) ; $procmux$99_Y
; yosys-smt2-anyseq accumulator#45 1 $auto$setundef.cc:524:execute$134
(declare-fun |accumulator#45| (|accumulator_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$135
(define-fun |accumulator#46| ((state |accumulator_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|accumulator#15| state)) #b1) (|accumulator#45| state) (|accumulator#44| state))) ; $procmux$102_Y
(define-fun |accumulator#47| ((state |accumulator_s|)) (_ BitVec 1) (ite (|accumulator#24| state) (|accumulator#46| state) (|accumulator#41| state))) ; $0$formal$accumulator.v:59$14_CHECK[0:0]$36
(define-fun |accumulator#48| ((state |accumulator_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|accumulator#14| state)) #b1) #b0 #b1)) ; $procmux$92_Y
(define-fun |accumulator#49| ((state |accumulator_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|accumulator#15| state)) #b1) #b0 (|accumulator#48| state))) ; $procmux$95_Y
(define-fun |accumulator#50| ((state |accumulator_s|)) (_ BitVec 1) (ite (|accumulator#24| state) (|accumulator#49| state) #b0)) ; $0$formal$accumulator.v:59$14_EN[0:0]$37
(define-fun |accumulator#51| ((state |accumulator_s|)) (_ BitVec 8) (bvadd (|accumulator#1| state) (|accumulator#2| state))) ; $add$accumulator.v:39$18_Y
(define-fun |accumulator#52| ((state |accumulator_s|)) (_ BitVec 8) (ite (|accumulator#4| state) (|accumulator#51| state) (|accumulator#1| state))) ; $procmux$107_Y
(define-fun |accumulator#53| ((state |accumulator_s|)) (_ BitVec 8) (ite (|accumulator#3| state) #b00000000 (|accumulator#52| state))) ; $0\o_ACCUMULATION[7:0]
(define-fun |accumulator_a| ((state |accumulator_s|)) Bool (and
  (|accumulator_a 0| state)
  (|accumulator_a 1| state)
  (|accumulator_a 2| state)
))
(define-fun |accumulator_u| ((state |accumulator_s|)) Bool 
  (|accumulator_u 0| state)
)
(define-fun |accumulator_i| ((state |accumulator_s|)) Bool (and
  (= (= ((_ extract 0 0) (|accumulator#0| state)) #b1) false) ; r_PAST_VALID
  (= (= ((_ extract 0 0) (|accumulator#8| state)) #b1) false) ; $formal$accumulator.v:59$14_EN
  (= (= ((_ extract 0 0) (|accumulator#10| state)) #b1) false) ; $formal$accumulator.v:57$13_EN
  (= (= ((_ extract 0 0) (|accumulator#12| state)) #b1) false) ; $formal$accumulator.v:53$12_EN
))
(define-fun |accumulator_h| ((state |accumulator_s|)) Bool true)
(define-fun |accumulator_t| ((state |accumulator_s|) (next_state |accumulator_s|)) Bool (and
  (= (ite (|accumulator#5| state) #b1 #b0) (|accumulator#16| next_state)) ; $procdff$113 $and$accumulator.v:50$40_Y
  (= (ite (|accumulator#3| state) #b1 #b0) (|accumulator#15| next_state)) ; $procdff$115 $eq$accumulator.v:52$45_Y
  (= (ite (|accumulator#4| state) #b1 #b0) (|accumulator#14| next_state)) ; $procdff$116 $eq$accumulator.v:56$47_Y
  (= (|accumulator#25| state) (|accumulator#13| next_state)) ; $procdff$125 $formal$accumulator.v:53$12_CHECK
  (= (|accumulator#27| state) (|accumulator#12| next_state)) ; $procdff$126 $formal$accumulator.v:53$12_EN
  (= (|accumulator#37| state) (|accumulator#11| next_state)) ; $procdff$127 $formal$accumulator.v:57$13_CHECK
  (= (|accumulator#40| state) (|accumulator#10| next_state)) ; $procdff$128 $formal$accumulator.v:57$13_EN
  (= (|accumulator#47| state) (|accumulator#9| next_state)) ; $procdff$129 $formal$accumulator.v:59$14_CHECK
  (= (|accumulator#50| state) (|accumulator#8| next_state)) ; $procdff$130 $formal$accumulator.v:59$14_EN
  (= (|accumulator#1| state) (|accumulator#7| next_state)) ; $procdff$117 $past$accumulator.v:56$5$0
  (= (|accumulator#2| state) (|accumulator#6| next_state)) ; $procdff$118 $past$accumulator.v:56$6$0
  (= (|accumulator#53| state) (|accumulator#1| next_state)) ; $procdff$131 \o_ACCUMULATION
  (= #b1 (|accumulator#0| next_state)) ; $procdff$112 \r_PAST_VALID
)) ; end of module accumulator
; yosys-smt2-topmod accumulator
; end of yosys output
