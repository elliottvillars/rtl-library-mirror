; SMT-LIBv2 description generated by Yosys 0.9 (git sha1 UNKNOWN, clang 9.0.0 -march=x86-64 -mtune=generic -O2 -fno-plt -fPIC -Os)
; yosys-smt2-module dynamic_clock_divider
(declare-sort |dynamic_clock_divider_s| 0)
(declare-fun |dynamic_clock_divider_is| (|dynamic_clock_divider_s|) Bool)
; yosys-smt2-register r_Count 32
; yosys-smt2-wire r_Count 32
(declare-fun |dynamic_clock_divider#0| (|dynamic_clock_divider_s|) (_ BitVec 32)) ; \r_Count
(define-fun |dynamic_clock_divider_n r_Count| ((state |dynamic_clock_divider_s|)) (_ BitVec 32) (|dynamic_clock_divider#0| state))
; yosys-smt2-output o_ENABLE_OUT 1
; yosys-smt2-register o_ENABLE_OUT 1
; yosys-smt2-wire o_ENABLE_OUT 1
(declare-fun |dynamic_clock_divider#1| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; \o_ENABLE_OUT
(define-fun |dynamic_clock_divider_n o_ENABLE_OUT| ((state |dynamic_clock_divider_s|)) Bool (= ((_ extract 0 0) (|dynamic_clock_divider#1| state)) #b1))
; yosys-smt2-input i_RST 1
; yosys-smt2-wire i_RST 1
(declare-fun |dynamic_clock_divider#2| (|dynamic_clock_divider_s|) Bool) ; \i_RST
(define-fun |dynamic_clock_divider_n i_RST| ((state |dynamic_clock_divider_s|)) Bool (|dynamic_clock_divider#2| state))
; yosys-smt2-input i_ENABLE 1
; yosys-smt2-wire i_ENABLE 1
(declare-fun |dynamic_clock_divider#3| (|dynamic_clock_divider_s|) Bool) ; \i_ENABLE
(define-fun |dynamic_clock_divider_n i_ENABLE| ((state |dynamic_clock_divider_s|)) Bool (|dynamic_clock_divider#3| state))
; yosys-smt2-input i_DIV_VALUE 32
; yosys-smt2-wire i_DIV_VALUE 32
(declare-fun |dynamic_clock_divider#4| (|dynamic_clock_divider_s|) (_ BitVec 32)) ; \i_DIV_VALUE
(define-fun |dynamic_clock_divider_n i_DIV_VALUE| ((state |dynamic_clock_divider_s|)) (_ BitVec 32) (|dynamic_clock_divider#4| state))
; yosys-smt2-input i_CLK 1
; yosys-smt2-wire i_CLK 1
(declare-fun |dynamic_clock_divider#5| (|dynamic_clock_divider_s|) Bool) ; \i_CLK
(define-fun |dynamic_clock_divider_n i_CLK| ((state |dynamic_clock_divider_s|)) Bool (|dynamic_clock_divider#5| state))
; yosys-smt2-register $past$dynamic_clock_divider.v:100$9$0 32
(declare-fun |dynamic_clock_divider#6| (|dynamic_clock_divider_s|) (_ BitVec 32)) ; $past$dynamic_clock_divider.v:100$9$0
(define-fun |dynamic_clock_divider_n $past$dynamic_clock_divider.v:100$9$0| ((state |dynamic_clock_divider_s|)) (_ BitVec 32) (|dynamic_clock_divider#6| state))
; yosys-smt2-register $formal$dynamic_clock_divider.v:91$18_CHECK 1
(declare-fun |dynamic_clock_divider#7| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $formal$dynamic_clock_divider.v:91$18_CHECK
(define-fun |dynamic_clock_divider_n $formal$dynamic_clock_divider.v:91$18_CHECK| ((state |dynamic_clock_divider_s|)) Bool (= ((_ extract 0 0) (|dynamic_clock_divider#7| state)) #b1))
; yosys-smt2-register $formal$dynamic_clock_divider.v:90$17_EN 1
(declare-fun |dynamic_clock_divider#8| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $formal$dynamic_clock_divider.v:90$17_EN
(define-fun |dynamic_clock_divider_n $formal$dynamic_clock_divider.v:90$17_EN| ((state |dynamic_clock_divider_s|)) Bool (= ((_ extract 0 0) (|dynamic_clock_divider#8| state)) #b1))
; yosys-smt2-register $formal$dynamic_clock_divider.v:90$17_CHECK 1
(declare-fun |dynamic_clock_divider#9| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $formal$dynamic_clock_divider.v:90$17_CHECK
(define-fun |dynamic_clock_divider_n $formal$dynamic_clock_divider.v:90$17_CHECK| ((state |dynamic_clock_divider_s|)) Bool (= ((_ extract 0 0) (|dynamic_clock_divider#9| state)) #b1))
; yosys-smt2-register $formal$dynamic_clock_divider.v:100$19_EN 1
(declare-fun |dynamic_clock_divider#10| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $formal$dynamic_clock_divider.v:100$19_EN
(define-fun |dynamic_clock_divider_n $formal$dynamic_clock_divider.v:100$19_EN| ((state |dynamic_clock_divider_s|)) Bool (= ((_ extract 0 0) (|dynamic_clock_divider#10| state)) #b1))
; yosys-smt2-register $formal$dynamic_clock_divider.v:100$19_CHECK 1
(declare-fun |dynamic_clock_divider#11| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $formal$dynamic_clock_divider.v:100$19_CHECK
(define-fun |dynamic_clock_divider_n $formal$dynamic_clock_divider.v:100$19_CHECK| ((state |dynamic_clock_divider_s|)) Bool (= ((_ extract 0 0) (|dynamic_clock_divider#11| state)) #b1))
; yosys-smt2-register $eq$dynamic_clock_divider.v:97$62_Y 1
(declare-fun |dynamic_clock_divider#12| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $eq$dynamic_clock_divider.v:97$62_Y
(define-fun |dynamic_clock_divider_n $eq$dynamic_clock_divider.v:97$62_Y| ((state |dynamic_clock_divider_s|)) Bool (= ((_ extract 0 0) (|dynamic_clock_divider#12| state)) #b1))
; yosys-smt2-register $eq$dynamic_clock_divider.v:88$55_Y 1
(declare-fun |dynamic_clock_divider#13| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $eq$dynamic_clock_divider.v:88$55_Y
(define-fun |dynamic_clock_divider_n $eq$dynamic_clock_divider.v:88$55_Y| ((state |dynamic_clock_divider_s|)) Bool (= ((_ extract 0 0) (|dynamic_clock_divider#13| state)) #b1))
; yosys-smt2-register $and$dynamic_clock_divider.v:86$50_Y 1
(declare-fun |dynamic_clock_divider#14| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $and$dynamic_clock_divider.v:86$50_Y
(define-fun |dynamic_clock_divider_n $and$dynamic_clock_divider.v:86$50_Y| ((state |dynamic_clock_divider_s|)) Bool (= ((_ extract 0 0) (|dynamic_clock_divider#14| state)) #b1))
(define-fun |dynamic_clock_divider#15| ((state |dynamic_clock_divider_s|)) Bool (distinct (ite (|dynamic_clock_divider#5| state) #b1 #b0) (|dynamic_clock_divider#14| state))) ; $0$formal$dynamic_clock_divider.v:85$16_CHECK[0:0]$40
; yosys-smt2-assume 0 dynamic_clock_divider.v:85
(define-fun |dynamic_clock_divider_u 0| ((state |dynamic_clock_divider_s|)) Bool (or (|dynamic_clock_divider#15| state) (not true))) ; $assume$dynamic_clock_divider.v:85$70
(define-fun |dynamic_clock_divider#16| ((state |dynamic_clock_divider_s|)) Bool (|dynamic_clock_divider_is| state)) ; $0$formal$dynamic_clock_divider.v:77$10_EN[0:0]$76
; yosys-smt2-assume 1 dynamic_clock_divider.v:79
(define-fun |dynamic_clock_divider_u 1| ((state |dynamic_clock_divider_s|)) Bool (or (|dynamic_clock_divider#2| state) (not (|dynamic_clock_divider#16| state)))) ; $assume$dynamic_clock_divider.v:79$69
(define-fun |dynamic_clock_divider#17| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (bvnot (ite (|dynamic_clock_divider#5| state) #b1 #b0))) ; $0$formal$dynamic_clock_divider.v:78$12_CHECK[0:0]$77
; yosys-smt2-assume 2 dynamic_clock_divider.v:78
(define-fun |dynamic_clock_divider_u 2| ((state |dynamic_clock_divider_s|)) Bool (or (= ((_ extract 0 0) (|dynamic_clock_divider#17| state)) #b1) (not (|dynamic_clock_divider#16| state)))) ; $assume$dynamic_clock_divider.v:78$68
(define-fun |dynamic_clock_divider#18| ((state |dynamic_clock_divider_s|)) Bool (not (or  (= ((_ extract 0 0) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 1 1) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 2 2) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 3 3) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 4 4) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 5 5) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 6 6) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 7 7) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 8 8) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 9 9) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 10 10) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 11 11) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 12 12) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 13 13) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 14 14) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 15 15) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 16 16) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 17 17) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 18 18) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 19 19) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 20 20) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 21 21) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 22 22) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 23 23) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 24 24) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 25 25) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 26 26) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 27 27) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 28 28) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 29 29) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 30 30) (|dynamic_clock_divider#0| state)) #b1) (= ((_ extract 31 31) (|dynamic_clock_divider#0| state)) #b1)))) ; $0$formal$dynamic_clock_divider.v:77$10_CHECK[0:0]$75
; yosys-smt2-assume 3 dynamic_clock_divider.v:77
(define-fun |dynamic_clock_divider_u 3| ((state |dynamic_clock_divider_s|)) Bool (or (|dynamic_clock_divider#18| state) (not (|dynamic_clock_divider#16| state)))) ; $assume$dynamic_clock_divider.v:77$67
; yosys-smt2-assert 0 dynamic_clock_divider.v:91
(define-fun |dynamic_clock_divider_a 0| ((state |dynamic_clock_divider_s|)) Bool (or (= ((_ extract 0 0) (|dynamic_clock_divider#7| state)) #b1) (not (= ((_ extract 0 0) (|dynamic_clock_divider#8| state)) #b1)))) ; $assert$dynamic_clock_divider.v:91$72
; yosys-smt2-assert 1 dynamic_clock_divider.v:90
(define-fun |dynamic_clock_divider_a 1| ((state |dynamic_clock_divider_s|)) Bool (or (= ((_ extract 0 0) (|dynamic_clock_divider#9| state)) #b1) (not (= ((_ extract 0 0) (|dynamic_clock_divider#8| state)) #b1)))) ; $assert$dynamic_clock_divider.v:90$71
; yosys-smt2-assert 2 dynamic_clock_divider.v:100
(define-fun |dynamic_clock_divider_a 2| ((state |dynamic_clock_divider_s|)) Bool (or (= ((_ extract 0 0) (|dynamic_clock_divider#11| state)) #b1) (not (= ((_ extract 0 0) (|dynamic_clock_divider#10| state)) #b1)))) ; $assert$dynamic_clock_divider.v:100$73
; yosys-smt2-anyseq dynamic_clock_divider#19 1 $auto$setundef.cc:524:execute$185
(declare-fun |dynamic_clock_divider#19| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$186
; yosys-smt2-anyseq dynamic_clock_divider#20 1 $auto$setundef.cc:524:execute$181
(declare-fun |dynamic_clock_divider#20| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$182
; yosys-smt2-anyseq dynamic_clock_divider#21 1 $auto$setundef.cc:524:execute$179
(declare-fun |dynamic_clock_divider#21| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$180
; yosys-smt2-anyseq dynamic_clock_divider#22 1 $auto$setundef.cc:524:execute$177
(declare-fun |dynamic_clock_divider#22| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$178
(define-fun |dynamic_clock_divider#23| ((state |dynamic_clock_divider_s|)) (_ BitVec 32) (bvadd (|dynamic_clock_divider#6| state) #b00000000000000000000000000000001)) ; $add$dynamic_clock_divider.v:100$65_Y
(define-fun |dynamic_clock_divider#24| ((state |dynamic_clock_divider_s|)) Bool (= (|dynamic_clock_divider#0| state) (|dynamic_clock_divider#23| state))) ; $eq$dynamic_clock_divider.v:100$66_Y
(define-fun |dynamic_clock_divider#25| ((state |dynamic_clock_divider_s|)) Bool (distinct (|dynamic_clock_divider#6| state) (|dynamic_clock_divider#4| state))) ; $ne$dynamic_clock_divider.v:99$64_Y
(define-fun |dynamic_clock_divider#26| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (|dynamic_clock_divider#25| state) (ite (|dynamic_clock_divider#24| state) #b1 #b0) (|dynamic_clock_divider#22| state))) ; $procmux$123_Y
(define-fun |dynamic_clock_divider#27| ((state |dynamic_clock_divider_s|)) Bool (= (|dynamic_clock_divider#12| state) (ite (|dynamic_clock_divider#3| state) #b1 #b0))) ; $eq$dynamic_clock_divider.v:97$61_Y
(define-fun |dynamic_clock_divider#28| ((state |dynamic_clock_divider_s|)) Bool (and (or  (|dynamic_clock_divider#27| state) false) (or  (= ((_ extract 0 0) (|dynamic_clock_divider#12| state)) #b1) false))) ; $logic_and$dynamic_clock_divider.v:97$63_Y
(define-fun |dynamic_clock_divider#29| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (|dynamic_clock_divider#28| state) (|dynamic_clock_divider#26| state) (|dynamic_clock_divider#21| state))) ; $procmux$125_Y
(define-fun |dynamic_clock_divider#30| ((state |dynamic_clock_divider_s|)) Bool (= (|dynamic_clock_divider#13| state) (ite (|dynamic_clock_divider#2| state) #b1 #b0))) ; $eq$dynamic_clock_divider.v:95$58_Y
(define-fun |dynamic_clock_divider#31| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (bvnot (|dynamic_clock_divider#13| state))) ; $eq$dynamic_clock_divider.v:95$59_Y
(define-fun |dynamic_clock_divider#32| ((state |dynamic_clock_divider_s|)) Bool (and (or  (|dynamic_clock_divider#30| state) false) (or  (= ((_ extract 0 0) (|dynamic_clock_divider#31| state)) #b1) false))) ; $logic_and$dynamic_clock_divider.v:95$60_Y
(define-fun |dynamic_clock_divider#33| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (|dynamic_clock_divider#32| state) (|dynamic_clock_divider#29| state) (|dynamic_clock_divider#20| state))) ; $procmux$127_Y
; yosys-smt2-anyseq dynamic_clock_divider#34 1 $auto$setundef.cc:524:execute$183
(declare-fun |dynamic_clock_divider#34| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$184
(define-fun |dynamic_clock_divider#35| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|dynamic_clock_divider#13| state)) #b1) (|dynamic_clock_divider#34| state) (|dynamic_clock_divider#33| state))) ; $procmux$130_Y
(define-fun |dynamic_clock_divider#36| ((state |dynamic_clock_divider_s|)) Bool (not (or  (= ((_ extract 0 0) (|dynamic_clock_divider#14| state)) #b1) false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false))) ; $logic_not$dynamic_clock_divider.v:86$51_Y
(define-fun |dynamic_clock_divider#37| ((state |dynamic_clock_divider_s|)) Bool (and (or  (|dynamic_clock_divider#36| state) false) (or  (|dynamic_clock_divider#5| state) false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false false))) ; $logic_and$dynamic_clock_divider.v:86$53_Y
(define-fun |dynamic_clock_divider#38| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (|dynamic_clock_divider#37| state) (|dynamic_clock_divider#35| state) (|dynamic_clock_divider#19| state))) ; $0$formal$dynamic_clock_divider.v:100$19_CHECK[0:0]$46
(define-fun |dynamic_clock_divider#39| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (|dynamic_clock_divider#25| state) #b1 #b0)) ; $procmux$112_Y
(define-fun |dynamic_clock_divider#40| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (|dynamic_clock_divider#28| state) (|dynamic_clock_divider#39| state) #b0)) ; $procmux$114_Y
(define-fun |dynamic_clock_divider#41| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (|dynamic_clock_divider#32| state) (|dynamic_clock_divider#40| state) #b0)) ; $procmux$116_Y
(define-fun |dynamic_clock_divider#42| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|dynamic_clock_divider#13| state)) #b1) #b0 (|dynamic_clock_divider#41| state))) ; $procmux$119_Y
(define-fun |dynamic_clock_divider#43| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (|dynamic_clock_divider#37| state) (|dynamic_clock_divider#42| state) #b0)) ; $0$formal$dynamic_clock_divider.v:100$19_EN[0:0]$47
; yosys-smt2-anyseq dynamic_clock_divider#44 1 $auto$setundef.cc:524:execute$171
(declare-fun |dynamic_clock_divider#44| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$172
; yosys-smt2-anyseq dynamic_clock_divider#45 1 $auto$setundef.cc:524:execute$187
(declare-fun |dynamic_clock_divider#45| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$188
(define-fun |dynamic_clock_divider#46| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|dynamic_clock_divider#13| state)) #b1) (ite (|dynamic_clock_divider#18| state) #b1 #b0) (|dynamic_clock_divider#45| state))) ; $procmux$98_Y
(define-fun |dynamic_clock_divider#47| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (|dynamic_clock_divider#37| state) (|dynamic_clock_divider#46| state) (|dynamic_clock_divider#44| state))) ; $0$formal$dynamic_clock_divider.v:90$17_CHECK[0:0]$42
(define-fun |dynamic_clock_divider#48| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|dynamic_clock_divider#13| state)) #b1) #b1 #b0)) ; $procmux$103_Y
(define-fun |dynamic_clock_divider#49| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (|dynamic_clock_divider#37| state) (|dynamic_clock_divider#48| state) #b0)) ; $0$formal$dynamic_clock_divider.v:90$17_EN[0:0]$43
; yosys-smt2-anyseq dynamic_clock_divider#50 1 $auto$setundef.cc:524:execute$175
(declare-fun |dynamic_clock_divider#50| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$176
; yosys-smt2-anyseq dynamic_clock_divider#51 1 $auto$setundef.cc:524:execute$173
(declare-fun |dynamic_clock_divider#51| (|dynamic_clock_divider_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2305:Anyseq$174
(define-fun |dynamic_clock_divider#52| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (bvnot (|dynamic_clock_divider#1| state))) ; $eq$dynamic_clock_divider.v:91$57_Y
(define-fun |dynamic_clock_divider#53| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|dynamic_clock_divider#13| state)) #b1) (|dynamic_clock_divider#52| state) (|dynamic_clock_divider#51| state))) ; $procmux$108_Y
(define-fun |dynamic_clock_divider#54| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (|dynamic_clock_divider#37| state) (|dynamic_clock_divider#53| state) (|dynamic_clock_divider#50| state))) ; $0$formal$dynamic_clock_divider.v:91$18_CHECK[0:0]$44
(define-fun |dynamic_clock_divider#55| ((state |dynamic_clock_divider_s|)) Bool (= (|dynamic_clock_divider#0| state) (|dynamic_clock_divider#4| state))) ; $eq$dynamic_clock_divider.v:63$27_Y
(define-fun |dynamic_clock_divider#56| ((state |dynamic_clock_divider_s|)) Bool (and (or  (|dynamic_clock_divider#55| state) false) (or  (|dynamic_clock_divider#3| state) false))) ; $logic_and$dynamic_clock_divider.v:63$29_Y
(define-fun |dynamic_clock_divider#57| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (|dynamic_clock_divider#56| state) #b1 #b0)) ; $procmux$135_Y
(define-fun |dynamic_clock_divider#58| ((state |dynamic_clock_divider_s|)) (_ BitVec 1) (ite (|dynamic_clock_divider#2| state) #b0 (|dynamic_clock_divider#57| state))) ; $0\o_ENABLE_OUT[0:0]
(define-fun |dynamic_clock_divider#59| ((state |dynamic_clock_divider_s|)) (_ BitVec 32) (bvadd (|dynamic_clock_divider#0| state) #b00000000000000000000000000000001)) ; $add$dynamic_clock_divider.v:46$24_Y
(define-fun |dynamic_clock_divider#60| ((state |dynamic_clock_divider_s|)) Bool (bvuge (|dynamic_clock_divider#0| state) (|dynamic_clock_divider#4| state))) ; $ge$dynamic_clock_divider.v:43$23_Y
(define-fun |dynamic_clock_divider#61| ((state |dynamic_clock_divider_s|)) (_ BitVec 32) (ite (|dynamic_clock_divider#60| state) #b00000000000000000000000000000000 (|dynamic_clock_divider#59| state))) ; $procmux$142_Y
(define-fun |dynamic_clock_divider#62| ((state |dynamic_clock_divider_s|)) (_ BitVec 32) (ite (|dynamic_clock_divider#3| state) (|dynamic_clock_divider#61| state) #b00000000000000000000000000000000)) ; $procmux$144_Y
(define-fun |dynamic_clock_divider#63| ((state |dynamic_clock_divider_s|)) (_ BitVec 32) (ite (|dynamic_clock_divider#2| state) #b00000000000000000000000000000000 (|dynamic_clock_divider#62| state))) ; $0\r_Count[31:0]
(define-fun |dynamic_clock_divider_a| ((state |dynamic_clock_divider_s|)) Bool (and
  (|dynamic_clock_divider_a 0| state)
  (|dynamic_clock_divider_a 1| state)
  (|dynamic_clock_divider_a 2| state)
))
(define-fun |dynamic_clock_divider_u| ((state |dynamic_clock_divider_s|)) Bool (and
  (|dynamic_clock_divider_u 0| state)
  (|dynamic_clock_divider_u 1| state)
  (|dynamic_clock_divider_u 2| state)
  (|dynamic_clock_divider_u 3| state)
))
(define-fun |dynamic_clock_divider_i| ((state |dynamic_clock_divider_s|)) Bool (and
  (= (= ((_ extract 0 0) (|dynamic_clock_divider#8| state)) #b1) false) ; $formal$dynamic_clock_divider.v:90$17_EN
  (= (= ((_ extract 0 0) (|dynamic_clock_divider#10| state)) #b1) false) ; $formal$dynamic_clock_divider.v:100$19_EN
))
(define-fun |dynamic_clock_divider_h| ((state |dynamic_clock_divider_s|)) Bool true)
(define-fun |dynamic_clock_divider_t| ((state |dynamic_clock_divider_s|) (next_state |dynamic_clock_divider_s|)) Bool (and
  (= (ite (|dynamic_clock_divider#5| state) #b1 #b0) (|dynamic_clock_divider#14| next_state)) ; $procdff$150 $and$dynamic_clock_divider.v:86$50_Y
  (= (ite (|dynamic_clock_divider#2| state) #b1 #b0) (|dynamic_clock_divider#13| next_state)) ; $procdff$152 $eq$dynamic_clock_divider.v:88$55_Y
  (= (ite (|dynamic_clock_divider#3| state) #b1 #b0) (|dynamic_clock_divider#12| next_state)) ; $procdff$155 $eq$dynamic_clock_divider.v:97$62_Y
  (= (|dynamic_clock_divider#38| state) (|dynamic_clock_divider#11| next_state)) ; $procdff$165 $formal$dynamic_clock_divider.v:100$19_CHECK
  (= (|dynamic_clock_divider#43| state) (|dynamic_clock_divider#10| next_state)) ; $procdff$166 $formal$dynamic_clock_divider.v:100$19_EN
  (= (|dynamic_clock_divider#47| state) (|dynamic_clock_divider#9| next_state)) ; $procdff$161 $formal$dynamic_clock_divider.v:90$17_CHECK
  (= (|dynamic_clock_divider#49| state) (|dynamic_clock_divider#8| next_state)) ; $procdff$162 $formal$dynamic_clock_divider.v:90$17_EN
  (= (|dynamic_clock_divider#54| state) (|dynamic_clock_divider#7| next_state)) ; $procdff$163 $formal$dynamic_clock_divider.v:91$18_CHECK
  (= (|dynamic_clock_divider#0| state) (|dynamic_clock_divider#6| next_state)) ; $procdff$157 $past$dynamic_clock_divider.v:100$9$0
  (= (|dynamic_clock_divider#58| state) (|dynamic_clock_divider#1| next_state)) ; $procdff$167 \o_ENABLE_OUT
  (= (|dynamic_clock_divider#63| state) (|dynamic_clock_divider#0| next_state)) ; $procdff$168 \r_Count
)) ; end of module dynamic_clock_divider
; yosys-smt2-topmod dynamic_clock_divider
; end of yosys output
