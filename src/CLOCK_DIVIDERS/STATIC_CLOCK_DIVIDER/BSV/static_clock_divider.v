//
// Generated by Bluespec Compiler (build 0000000)
//
// On Thu Nov 19 17:50:55 PST 2020
//
//
// Ports:
// Name                         I/O  size props
// drive                          O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// i_EN                           I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module static_clock_divider(CLK,
			    RST_N,

			    i_EN,

			    drive);
  input  CLK;
  input  RST_N;

  // action method enable
  input  i_EN;

  // value method drive
  output drive;

  // signals for module outputs
  wire drive;

  // register counter
  reg [31 : 0] counter;
  wire [31 : 0] counter$D_IN;
  wire counter$EN;

  // register en_OUT
  reg en_OUT;
  wire en_OUT$D_IN, en_OUT$EN;

  // remaining internal signals
  wire [31 : 0] x__h153;

  // value method drive
  assign drive = en_OUT ;

  // register counter
  assign counter$D_IN = (counter == 32'd2) ? 32'd0 : x__h153 ;
  assign counter$EN = i_EN ;

  // register en_OUT
  assign en_OUT$D_IN = counter == 32'd2 ;
  assign en_OUT$EN = 1'd1 ;

  // remaining internal signals
  assign x__h153 = counter + 32'd1 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        counter <= `BSV_ASSIGNMENT_DELAY 32'd0;
	en_OUT <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (counter$EN) counter <= `BSV_ASSIGNMENT_DELAY counter$D_IN;
	if (en_OUT$EN) en_OUT <= `BSV_ASSIGNMENT_DELAY en_OUT$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    counter = 32'hAAAAAAAA;
    en_OUT = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // static_clock_divider

