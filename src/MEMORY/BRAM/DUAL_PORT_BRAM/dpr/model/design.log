
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 UNKNOWN, clang 9.0.0 -march=x86-64 -mtune=generic -O2 -fno-plt -fPIC -Os)


-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: dual_port_bram.v
Parsing formal Verilog input from `dual_port_bram.v' to AST representation.
Generating RTLIL representation for module `\dual_port_bram'.
Successfully finished Verilog frontend.

2. Executing PREP pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.1.1. Analyzing design hierarchy..
Top module:  \dual_port_bram

2.1.2. Analyzing design hierarchy..
Top module:  \dual_port_bram
Removed 0 unused modules.
Module dual_port_bram directly or indirectly contains formal properties -> setting "keep" attribute.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 2 switch rules as full_case in process $proc$dual_port_bram.v:51$57 in module dual_port_bram.
Marked 2 switch rules as full_case in process $proc$dual_port_bram.v:30$40 in module dual_port_bram.
Marked 2 switch rules as full_case in process $proc$dual_port_bram.v:18$35 in module dual_port_bram.
Removed a total of 0 dead cases.

2.2.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\dual_port_bram.$proc$dual_port_bram.v:74$172'.
  Set init value: $formal$dual_port_bram.v:74$34_EN = 1'0
Found init rule in `\dual_port_bram.$proc$dual_port_bram.v:72$170'.
  Set init value: $formal$dual_port_bram.v:72$33_EN = 1'0
Found init rule in `\dual_port_bram.$proc$dual_port_bram.v:70$168'.
  Set init value: $formal$dual_port_bram.v:70$32_EN = 1'0
Found init rule in `\dual_port_bram.$proc$dual_port_bram.v:68$166'.
  Set init value: $formal$dual_port_bram.v:68$31_EN = 1'0
Found init rule in `\dual_port_bram.$proc$dual_port_bram.v:66$164'.
  Set init value: $formal$dual_port_bram.v:66$30_EN = 1'0
Found init rule in `\dual_port_bram.$proc$dual_port_bram.v:64$162'.
  Set init value: $formal$dual_port_bram.v:64$29_EN = 1'0
Found init rule in `\dual_port_bram.$proc$dual_port_bram.v:59$160'.
  Set init value: $formal$dual_port_bram.v:59$28_EN = 1'0
Found init rule in `\dual_port_bram.$proc$dual_port_bram.v:58$158'.
  Set init value: $formal$dual_port_bram.v:58$27_EN = 1'0
Found init rule in `\dual_port_bram.$proc$dual_port_bram.v:57$156'.
  Set init value: $formal$dual_port_bram.v:57$26_EN = 1'0
Found init rule in `\dual_port_bram.$proc$dual_port_bram.v:56$154'.
  Set init value: $formal$dual_port_bram.v:56$25_EN = 1'0
Found init rule in `\dual_port_bram.$proc$dual_port_bram.v:55$152'.
  Set init value: $formal$dual_port_bram.v:55$24_EN = 1'0
Found init rule in `\dual_port_bram.$proc$dual_port_bram.v:54$150'.
  Set init value: $formal$dual_port_bram.v:54$23_EN = 1'0
Found init rule in `\dual_port_bram.$proc$dual_port_bram.v:43$139'.
  Set init value: \r_PAST_VALID = 1'0

2.2.4. Executing PROC_ARST pass (detect async resets in processes).

2.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:74$172'.
     1/1: $0$formal$dual_port_bram.v:74$34_EN[0:0]$173
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:72$170'.
     1/1: $0$formal$dual_port_bram.v:72$33_EN[0:0]$171
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:70$168'.
     1/1: $0$formal$dual_port_bram.v:70$32_EN[0:0]$169
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:68$166'.
     1/1: $0$formal$dual_port_bram.v:68$31_EN[0:0]$167
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:66$164'.
     1/1: $0$formal$dual_port_bram.v:66$30_EN[0:0]$165
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:64$162'.
     1/1: $0$formal$dual_port_bram.v:64$29_EN[0:0]$163
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:59$160'.
     1/1: $0$formal$dual_port_bram.v:59$28_EN[0:0]$161
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:58$158'.
     1/1: $0$formal$dual_port_bram.v:58$27_EN[0:0]$159
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:57$156'.
     1/1: $0$formal$dual_port_bram.v:57$26_EN[0:0]$157
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:56$154'.
     1/1: $0$formal$dual_port_bram.v:56$25_EN[0:0]$155
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:55$152'.
     1/1: $0$formal$dual_port_bram.v:55$24_EN[0:0]$153
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:54$150'.
     1/1: $0$formal$dual_port_bram.v:54$23_EN[0:0]$151
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:44$140'.
     1/6: $0$formal$dual_port_bram.v:48$21_EN[0:0]$146
     2/6: $0$formal$dual_port_bram.v:48$21_CHECK[0:0]$145
     3/6: $0$formal$dual_port_bram.v:47$19_EN[0:0]$144
     4/6: $0$formal$dual_port_bram.v:47$19_CHECK[0:0]$143
     5/6: $0$formal$dual_port_bram.v:46$17_EN[0:0]$142
     6/6: $0$formal$dual_port_bram.v:46$17_CHECK[0:0]$141
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:43$139'.
     1/1: $1\r_PAST_VALID[0:0]
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
     1/37: $0$past$dual_port_bram.v:74$12$0[7:0]$69
     2/37: $0$past$dual_port_bram.v:74$11$0[3:0]$68
     3/37: $0$past$dual_port_bram.v:73$10$0[0:0]$67
     4/37: $0$past$dual_port_bram.v:72$9$0[7:0]$66
     5/37: $0$past$dual_port_bram.v:72$8$0[3:0]$65
     6/37: $0$past$dual_port_bram.v:71$7$0[0:0]$64
     7/37: $0$past$dual_port_bram.v:68$6$0[3:0]$63
     8/37: $0$past$dual_port_bram.v:67$5$0[0:0]$62
     9/37: $0$past$dual_port_bram.v:64$4$0[3:0]$61
    10/37: $0$past$dual_port_bram.v:63$3$0[0:0]$60
    11/37: $0$past$dual_port_bram.v:61$2$0[0:0]$59
    12/37: $0$past$dual_port_bram.v:54$1$0[0:0]$58
    13/37: $0$formal$dual_port_bram.v:59$28_EN[0:0]$81
    14/37: $0$formal$dual_port_bram.v:59$28_CHECK[0:0]$80
    15/37: $0$formal$dual_port_bram.v:58$27_EN[0:0]$79
    16/37: $0$formal$dual_port_bram.v:58$27_CHECK[0:0]$78
    17/37: $0$formal$dual_port_bram.v:57$26_EN[0:0]$77
    18/37: $0$formal$dual_port_bram.v:57$26_CHECK[0:0]$76
    19/37: $0$formal$dual_port_bram.v:56$25_EN[0:0]$75
    20/37: $0$formal$dual_port_bram.v:56$25_CHECK[0:0]$74
    21/37: $0$formal$dual_port_bram.v:55$24_EN[0:0]$73
    22/37: $0$formal$dual_port_bram.v:55$24_CHECK[0:0]$72
    23/37: $0$formal$dual_port_bram.v:54$23_EN[0:0]$71
    24/37: $0$formal$dual_port_bram.v:54$23_CHECK[0:0]$70
    25/37: $0\r_PAST_VALID[0:0]
    26/37: $0$formal$dual_port_bram.v:64$29_EN[0:0]$83
    27/37: $0$formal$dual_port_bram.v:64$29_CHECK[0:0]$82
    28/37: $0$formal$dual_port_bram.v:66$30_EN[0:0]$85
    29/37: $0$formal$dual_port_bram.v:66$30_CHECK[0:0]$84
    30/37: $0$formal$dual_port_bram.v:68$31_EN[0:0]$87
    31/37: $0$formal$dual_port_bram.v:68$31_CHECK[0:0]$86
    32/37: $0$formal$dual_port_bram.v:70$32_EN[0:0]$89
    33/37: $0$formal$dual_port_bram.v:70$32_CHECK[0:0]$88
    34/37: $0$formal$dual_port_bram.v:72$33_EN[0:0]$91
    35/37: $0$formal$dual_port_bram.v:72$33_CHECK[0:0]$90
    36/37: $0$formal$dual_port_bram.v:74$34_EN[0:0]$93
    37/37: $0$formal$dual_port_bram.v:74$34_CHECK[0:0]$92
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:30$40'.
     1/12: $0$memwr$\r_RAM$dual_port_bram.v:33$13_EN[7:0]$43
     2/12: $0$memwr$\r_RAM$dual_port_bram.v:33$13_DATA[7:0]$42
     3/12: $0$memwr$\r_RAM$dual_port_bram.v:33$13_ADDR[3:0]$41
     4/12: $0$memwr$\r_RAM$dual_port_bram.v:35$14_EN[7:0]$46
     5/12: $0$memwr$\r_RAM$dual_port_bram.v:35$14_DATA[7:0]$45
     6/12: $0$memwr$\r_RAM$dual_port_bram.v:35$14_ADDR[3:0]$44
     7/12: $0$memwr$\r_RAM$dual_port_bram.v:37$15_EN[7:0]$49
     8/12: $0$memwr$\r_RAM$dual_port_bram.v:37$15_DATA[7:0]$48
     9/12: $0$memwr$\r_RAM$dual_port_bram.v:37$15_ADDR[3:0]$47
    10/12: $0$memwr$\r_RAM$dual_port_bram.v:39$16_EN[7:0]$52
    11/12: $0$memwr$\r_RAM$dual_port_bram.v:39$16_DATA[7:0]$51
    12/12: $0$memwr$\r_RAM$dual_port_bram.v:39$16_ADDR[3:0]$50
Creating decoders for process `\dual_port_bram.$proc$dual_port_bram.v:18$35'.
     1/2: $0\o_READ_DATA_B[7:0]
     2/2: $0\o_READ_DATA_A[7:0]

2.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\dual_port_bram.$formal$dual_port_bram.v:46$17_CHECK' from process `\dual_port_bram.$proc$dual_port_bram.v:44$140'.
No latch inferred for signal `\dual_port_bram.$formal$dual_port_bram.v:46$17_EN' from process `\dual_port_bram.$proc$dual_port_bram.v:44$140'.
No latch inferred for signal `\dual_port_bram.$formal$dual_port_bram.v:47$19_CHECK' from process `\dual_port_bram.$proc$dual_port_bram.v:44$140'.
No latch inferred for signal `\dual_port_bram.$formal$dual_port_bram.v:47$19_EN' from process `\dual_port_bram.$proc$dual_port_bram.v:44$140'.
No latch inferred for signal `\dual_port_bram.$formal$dual_port_bram.v:48$21_CHECK' from process `\dual_port_bram.$proc$dual_port_bram.v:44$140'.
No latch inferred for signal `\dual_port_bram.$formal$dual_port_bram.v:48$21_EN' from process `\dual_port_bram.$proc$dual_port_bram.v:44$140'.

2.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\dual_port_bram.\r_PAST_VALID' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$272' with positive edge clock.
Creating register for signal `\dual_port_bram.$past$dual_port_bram.v:54$1$0' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$273' with positive edge clock.
Creating register for signal `\dual_port_bram.$past$dual_port_bram.v:61$2$0' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$274' with positive edge clock.
Creating register for signal `\dual_port_bram.$past$dual_port_bram.v:63$3$0' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$275' with positive edge clock.
Creating register for signal `\dual_port_bram.$past$dual_port_bram.v:64$4$0' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$276' with positive edge clock.
Creating register for signal `\dual_port_bram.$past$dual_port_bram.v:67$5$0' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$277' with positive edge clock.
Creating register for signal `\dual_port_bram.$past$dual_port_bram.v:68$6$0' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$278' with positive edge clock.
Creating register for signal `\dual_port_bram.$past$dual_port_bram.v:71$7$0' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$279' with positive edge clock.
Creating register for signal `\dual_port_bram.$past$dual_port_bram.v:72$8$0' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$280' with positive edge clock.
Creating register for signal `\dual_port_bram.$past$dual_port_bram.v:72$9$0' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$281' with positive edge clock.
Creating register for signal `\dual_port_bram.$past$dual_port_bram.v:73$10$0' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$282' with positive edge clock.
Creating register for signal `\dual_port_bram.$past$dual_port_bram.v:74$11$0' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$283' with positive edge clock.
Creating register for signal `\dual_port_bram.$past$dual_port_bram.v:74$12$0' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$284' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:54$23_CHECK' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$285' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:54$23_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$286' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:55$24_CHECK' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$287' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:55$24_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$288' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:56$25_CHECK' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$289' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:56$25_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$290' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:57$26_CHECK' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$291' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:57$26_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$292' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:58$27_CHECK' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$293' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:58$27_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$294' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:59$28_CHECK' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$295' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:59$28_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$296' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:64$29_CHECK' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$297' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:64$29_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$298' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:66$30_CHECK' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$299' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:66$30_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$300' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:68$31_CHECK' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$301' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:68$31_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$302' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:70$32_CHECK' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$303' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:70$32_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$304' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:72$33_CHECK' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$305' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:72$33_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$306' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:74$34_CHECK' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$307' with positive edge clock.
Creating register for signal `\dual_port_bram.$formal$dual_port_bram.v:74$34_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
  created $dff cell `$procdff$308' with positive edge clock.
Creating register for signal `\dual_port_bram.$memwr$\r_RAM$dual_port_bram.v:33$13_ADDR' using process `\dual_port_bram.$proc$dual_port_bram.v:30$40'.
  created $dff cell `$procdff$309' with positive edge clock.
Creating register for signal `\dual_port_bram.$memwr$\r_RAM$dual_port_bram.v:33$13_DATA' using process `\dual_port_bram.$proc$dual_port_bram.v:30$40'.
  created $dff cell `$procdff$310' with positive edge clock.
Creating register for signal `\dual_port_bram.$memwr$\r_RAM$dual_port_bram.v:33$13_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:30$40'.
  created $dff cell `$procdff$311' with positive edge clock.
Creating register for signal `\dual_port_bram.$memwr$\r_RAM$dual_port_bram.v:35$14_ADDR' using process `\dual_port_bram.$proc$dual_port_bram.v:30$40'.
  created $dff cell `$procdff$312' with positive edge clock.
Creating register for signal `\dual_port_bram.$memwr$\r_RAM$dual_port_bram.v:35$14_DATA' using process `\dual_port_bram.$proc$dual_port_bram.v:30$40'.
  created $dff cell `$procdff$313' with positive edge clock.
Creating register for signal `\dual_port_bram.$memwr$\r_RAM$dual_port_bram.v:35$14_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:30$40'.
  created $dff cell `$procdff$314' with positive edge clock.
Creating register for signal `\dual_port_bram.$memwr$\r_RAM$dual_port_bram.v:37$15_ADDR' using process `\dual_port_bram.$proc$dual_port_bram.v:30$40'.
  created $dff cell `$procdff$315' with positive edge clock.
Creating register for signal `\dual_port_bram.$memwr$\r_RAM$dual_port_bram.v:37$15_DATA' using process `\dual_port_bram.$proc$dual_port_bram.v:30$40'.
  created $dff cell `$procdff$316' with positive edge clock.
Creating register for signal `\dual_port_bram.$memwr$\r_RAM$dual_port_bram.v:37$15_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:30$40'.
  created $dff cell `$procdff$317' with positive edge clock.
Creating register for signal `\dual_port_bram.$memwr$\r_RAM$dual_port_bram.v:39$16_ADDR' using process `\dual_port_bram.$proc$dual_port_bram.v:30$40'.
  created $dff cell `$procdff$318' with positive edge clock.
Creating register for signal `\dual_port_bram.$memwr$\r_RAM$dual_port_bram.v:39$16_DATA' using process `\dual_port_bram.$proc$dual_port_bram.v:30$40'.
  created $dff cell `$procdff$319' with positive edge clock.
Creating register for signal `\dual_port_bram.$memwr$\r_RAM$dual_port_bram.v:39$16_EN' using process `\dual_port_bram.$proc$dual_port_bram.v:30$40'.
  created $dff cell `$procdff$320' with positive edge clock.
Creating register for signal `\dual_port_bram.\o_READ_DATA_A' using process `\dual_port_bram.$proc$dual_port_bram.v:18$35'.
  created $dff cell `$procdff$321' with positive edge clock.
Creating register for signal `\dual_port_bram.\o_READ_DATA_B' using process `\dual_port_bram.$proc$dual_port_bram.v:18$35'.
  created $dff cell `$procdff$322' with positive edge clock.

2.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:74$172'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:72$170'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:70$168'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:68$166'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:66$164'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:64$162'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:59$160'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:58$158'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:57$156'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:56$154'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:55$152'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:54$150'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:44$140'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:43$139'.
Found and cleaned up 5 empty switches in `\dual_port_bram.$proc$dual_port_bram.v:51$57'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:51$57'.
Found and cleaned up 2 empty switches in `\dual_port_bram.$proc$dual_port_bram.v:30$40'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:30$40'.
Found and cleaned up 2 empty switches in `\dual_port_bram.$proc$dual_port_bram.v:18$35'.
Removing empty process `dual_port_bram.$proc$dual_port_bram.v:18$35'.
Cleaned up 9 empty switches.

2.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module dual_port_bram.
<suppressed ~14 debug messages>

2.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dual_port_bram..
Removed 0 unused cells and 123 unused wires.
<suppressed ~1 debug messages>

2.5. Executing CHECK pass (checking for obvious problems).
checking module dual_port_bram..
found and reported 0 problems.

2.6. Executing OPT pass (performing simple optimizations).

2.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dual_port_bram.

2.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dual_port_bram'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

2.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dual_port_bram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

2.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dual_port_bram.
    Consolidated identical input bits for $mux cell $procmux$231:
      Old ports: A=8'00000000, B=8'11111111, Y=$0$memwr$\r_RAM$dual_port_bram.v:33$13_EN[7:0]$43
      New ports: A=1'0, B=1'1, Y=$0$memwr$\r_RAM$dual_port_bram.v:33$13_EN[7:0]$43 [0]
      New connections: $0$memwr$\r_RAM$dual_port_bram.v:33$13_EN[7:0]$43 [7:1] = { $0$memwr$\r_RAM$dual_port_bram.v:33$13_EN[7:0]$43 [0] $0$memwr$\r_RAM$dual_port_bram.v:33$13_EN[7:0]$43 [0] $0$memwr$\r_RAM$dual_port_bram.v:33$13_EN[7:0]$43 [0] $0$memwr$\r_RAM$dual_port_bram.v:33$13_EN[7:0]$43 [0] $0$memwr$\r_RAM$dual_port_bram.v:33$13_EN[7:0]$43 [0] $0$memwr$\r_RAM$dual_port_bram.v:33$13_EN[7:0]$43 [0] $0$memwr$\r_RAM$dual_port_bram.v:33$13_EN[7:0]$43 [0] }
    Consolidated identical input bits for $mux cell $procmux$240:
      Old ports: A=8'11111111, B=8'00000000, Y=$0$memwr$\r_RAM$dual_port_bram.v:35$14_EN[7:0]$46
      New ports: A=1'1, B=1'0, Y=$0$memwr$\r_RAM$dual_port_bram.v:35$14_EN[7:0]$46 [0]
      New connections: $0$memwr$\r_RAM$dual_port_bram.v:35$14_EN[7:0]$46 [7:1] = { $0$memwr$\r_RAM$dual_port_bram.v:35$14_EN[7:0]$46 [0] $0$memwr$\r_RAM$dual_port_bram.v:35$14_EN[7:0]$46 [0] $0$memwr$\r_RAM$dual_port_bram.v:35$14_EN[7:0]$46 [0] $0$memwr$\r_RAM$dual_port_bram.v:35$14_EN[7:0]$46 [0] $0$memwr$\r_RAM$dual_port_bram.v:35$14_EN[7:0]$46 [0] $0$memwr$\r_RAM$dual_port_bram.v:35$14_EN[7:0]$46 [0] $0$memwr$\r_RAM$dual_port_bram.v:35$14_EN[7:0]$46 [0] }
    Consolidated identical input bits for $mux cell $procmux$249:
      Old ports: A=8'00000000, B=8'11111111, Y=$0$memwr$\r_RAM$dual_port_bram.v:37$15_EN[7:0]$49
      New ports: A=1'0, B=1'1, Y=$0$memwr$\r_RAM$dual_port_bram.v:37$15_EN[7:0]$49 [0]
      New connections: $0$memwr$\r_RAM$dual_port_bram.v:37$15_EN[7:0]$49 [7:1] = { $0$memwr$\r_RAM$dual_port_bram.v:37$15_EN[7:0]$49 [0] $0$memwr$\r_RAM$dual_port_bram.v:37$15_EN[7:0]$49 [0] $0$memwr$\r_RAM$dual_port_bram.v:37$15_EN[7:0]$49 [0] $0$memwr$\r_RAM$dual_port_bram.v:37$15_EN[7:0]$49 [0] $0$memwr$\r_RAM$dual_port_bram.v:37$15_EN[7:0]$49 [0] $0$memwr$\r_RAM$dual_port_bram.v:37$15_EN[7:0]$49 [0] $0$memwr$\r_RAM$dual_port_bram.v:37$15_EN[7:0]$49 [0] }
    Consolidated identical input bits for $mux cell $procmux$258:
      Old ports: A=8'11111111, B=8'00000000, Y=$0$memwr$\r_RAM$dual_port_bram.v:39$16_EN[7:0]$52
      New ports: A=1'1, B=1'0, Y=$0$memwr$\r_RAM$dual_port_bram.v:39$16_EN[7:0]$52 [0]
      New connections: $0$memwr$\r_RAM$dual_port_bram.v:39$16_EN[7:0]$52 [7:1] = { $0$memwr$\r_RAM$dual_port_bram.v:39$16_EN[7:0]$52 [0] $0$memwr$\r_RAM$dual_port_bram.v:39$16_EN[7:0]$52 [0] $0$memwr$\r_RAM$dual_port_bram.v:39$16_EN[7:0]$52 [0] $0$memwr$\r_RAM$dual_port_bram.v:39$16_EN[7:0]$52 [0] $0$memwr$\r_RAM$dual_port_bram.v:39$16_EN[7:0]$52 [0] $0$memwr$\r_RAM$dual_port_bram.v:39$16_EN[7:0]$52 [0] $0$memwr$\r_RAM$dual_port_bram.v:39$16_EN[7:0]$52 [0] }
  Optimizing cells in module \dual_port_bram.
Performed a total of 4 changes.

2.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dual_port_bram'.
Removed a total of 0 cells.

2.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dual_port_bram..
Removed 0 unused cells and 9 unused wires.
<suppressed ~8 debug messages>

2.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module dual_port_bram.

2.6.9. Rerunning OPT passes. (Maybe there is more to do..)

2.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \dual_port_bram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~26 debug messages>

2.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \dual_port_bram.
Performed a total of 0 changes.

2.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dual_port_bram'.
Removed a total of 0 cells.

2.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dual_port_bram..

2.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module dual_port_bram.

2.6.16. Finished OPT passes. (There is nothing left to do.)

2.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell dual_port_bram.$and$dual_port_bram.v:61$101 ($and).
Removed top 31 bits (of 32) from port Y of cell dual_port_bram.$and$dual_port_bram.v:61$101 ($and).
Removed top 31 bits (of 32) from port B of cell dual_port_bram.$and$dual_port_bram.v:61$103 ($and).
Removed top 31 bits (of 32) from port Y of cell dual_port_bram.$and$dual_port_bram.v:61$103 ($and).
Removed top 7 bits (of 8) from FF cell dual_port_bram.$procdff$311 ($dff).
Removed top 7 bits (of 8) from FF cell dual_port_bram.$procdff$314 ($dff).
Removed top 7 bits (of 8) from FF cell dual_port_bram.$procdff$317 ($dff).
Removed top 7 bits (of 8) from FF cell dual_port_bram.$procdff$320 ($dff).
Removed top 31 bits (of 32) from wire dual_port_bram.$and$dual_port_bram.v:61$101_Y.
Removed top 31 bits (of 32) from wire dual_port_bram.$and$dual_port_bram.v:61$103_Y.

2.8. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$memwr$\r_RAM$dual_port_bram.v:33$120' in module `\dual_port_bram': merged $dff to cell.
Checking cell `$memwr$\r_RAM$dual_port_bram.v:35$121' in module `\dual_port_bram': merged $dff to cell.
Checking cell `$memwr$\r_RAM$dual_port_bram.v:37$122' in module `\dual_port_bram': merged $dff to cell.
Checking cell `$memwr$\r_RAM$dual_port_bram.v:39$123' in module `\dual_port_bram': merged $dff to cell.

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dual_port_bram..
Removed 12 unused cells and 14 unused wires.
<suppressed ~13 debug messages>

2.10. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\r_RAM' in module `\dual_port_bram':
  $memwr$\r_RAM$dual_port_bram.v:33$120 ($memwr)
  $memwr$\r_RAM$dual_port_bram.v:35$121 ($memwr)
  $memwr$\r_RAM$dual_port_bram.v:37$122 ($memwr)
  $memwr$\r_RAM$dual_port_bram.v:39$123 ($memwr)
  $memrd$\r_RAM$dual_port_bram.v:21$37 ($memrd)
  $memrd$\r_RAM$dual_port_bram.v:25$39 ($memrd)
  $memrd$\r_RAM$dual_port_bram.v:39$56 ($memrd)
  $memrd$\r_RAM$dual_port_bram.v:35$54 ($memrd)
  $memrd$\r_RAM$dual_port_bram.v:64$107 ($memrd)
  $memrd$\r_RAM$dual_port_bram.v:68$111 ($memrd)
  $memrd$\r_RAM$dual_port_bram.v:72$115 ($memrd)
  $memrd$\r_RAM$dual_port_bram.v:74$118 ($memrd)

2.11. Executing OPT pass (performing simple optimizations).

2.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dual_port_bram.
<suppressed ~2 debug messages>

2.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dual_port_bram'.
Removed a total of 0 cells.

2.11.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dual_port_bram..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

2.11.5. Finished fast OPT passes.

2.12. Printing statistics.

=== dual_port_bram ===

   Number of wires:                108
   Number of wire bits:            312
   Number of public wires:          14
   Number of public wire bits:      54
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                105
     $assert                         6
     $assume                         9
     $dff                           32
     $eq                             4
     $initstate                      1
     $logic_and                      2
     $logic_not                      3
     $mem                            1
     $mux                           38
     $ne                             6
     $not                            3

2.13. Executing CHECK pass (checking for obvious problems).
checking module dual_port_bram..
found and reported 0 problems.

3. Executing MEMORY_NORDFF pass (extracting $dff cells from $mem).

4. Executing ASYNC2SYNC pass.

5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dual_port_bram..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

6. Executing SETUNDEF pass (replace undef values with defined constants).

7. Executing OPT pass (performing simple optimizations).

7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module dual_port_bram.

7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\dual_port_bram'.
Removed a total of 0 cells.

7.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \dual_port_bram..

7.5. Finished fast OPT passes.

8. Executing CHECK pass (checking for obvious problems).
checking module dual_port_bram..
found and reported 0 problems.

9. Executing HIERARCHY pass (managing design hierarchy).

9.1. Analyzing design hierarchy..
Top module:  \dual_port_bram

9.2. Analyzing design hierarchy..
Top module:  \dual_port_bram
Removed 0 unused modules.
Module dual_port_bram directly or indirectly contains formal properties -> setting "keep" attribute.

10. Executing ILANG backend.
Output filename: ../model/design.il

End of script. Logfile hash: f822765110
CPU: user 0.13s system 0.00s, MEM: 18.37 MB total, 10.23 MB resident
Yosys 0.9 (git sha1 UNKNOWN, clang 9.0.0 -march=x86-64 -mtune=generic -O2 -fno-plt -fPIC -Os)
Time spent: 30% 7x opt_clean (0 sec), 11% 6x opt_expr (0 sec), ...
